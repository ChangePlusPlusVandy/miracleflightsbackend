{"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/tests/Examples.tests.ts":{"path":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/tests/Examples.tests.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"25":{"start":{"line":26,"column":4},"end":{"line":26,"column":62}},"26":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}},"27":{"start":{"line":29,"column":24},"end":{"line":29,"column":58}},"28":{"start":{"line":30,"column":20},"end":{"line":30,"column":57}},"29":{"start":{"line":31,"column":17},"end":{"line":31,"column":51}},"30":{"start":{"line":32,"column":15},"end":{"line":32,"column":44}},"31":{"start":{"line":33,"column":0},"end":{"line":33,"column":26}},"32":{"start":{"line":35,"column":0},"end":{"line":35,"column":40}},"33":{"start":{"line":36,"column":0},"end":{"line":36,"column":24}},"34":{"start":{"line":38,"column":12},"end":{"line":38,"column":50}},"35":{"start":{"line":41,"column":0},"end":{"line":45,"column":3}},"36":{"start":{"line":42,"column":4},"end":{"line":44,"column":7}},"37":{"start":{"line":43,"column":8},"end":{"line":43,"column":15}},"38":{"start":{"line":47,"column":0},"end":{"line":50,"column":3}},"39":{"start":{"line":48,"column":4},"end":{"line":48,"column":19}},"40":{"start":{"line":49,"column":4},"end":{"line":49,"column":11}},"41":{"start":{"line":52,"column":0},"end":{"line":73,"column":3}},"42":{"start":{"line":53,"column":4},"end":{"line":62,"column":7}},"43":{"start":{"line":54,"column":8},"end":{"line":61,"column":11}},"44":{"start":{"line":59,"column":12},"end":{"line":59,"column":56}},"45":{"start":{"line":60,"column":12},"end":{"line":60,"column":19}},"46":{"start":{"line":63,"column":4},"end":{"line":72,"column":7}},"47":{"start":{"line":64,"column":8},"end":{"line":71,"column":11}},"48":{"start":{"line":69,"column":12},"end":{"line":69,"column":56}},"49":{"start":{"line":70,"column":12},"end":{"line":70,"column":19}},"50":{"start":{"line":75,"column":0},"end":{"line":96,"column":3}},"51":{"start":{"line":76,"column":4},"end":{"line":85,"column":7}},"52":{"start":{"line":77,"column":8},"end":{"line":84,"column":11}},"53":{"start":{"line":81,"column":12},"end":{"line":81,"column":56}},"54":{"start":{"line":82,"column":12},"end":{"line":82,"column":142}},"55":{"start":{"line":83,"column":12},"end":{"line":83,"column":19}},"56":{"start":{"line":86,"column":4},"end":{"line":95,"column":7}},"57":{"start":{"line":87,"column":8},"end":{"line":94,"column":11}},"58":{"start":{"line":91,"column":12},"end":{"line":91,"column":56}},"59":{"start":{"line":92,"column":12},"end":{"line":92,"column":70}},"60":{"start":{"line":93,"column":12},"end":{"line":93,"column":19}},"61":{"start":{"line":98,"column":0},"end":{"line":118,"column":3}},"62":{"start":{"line":99,"column":4},"end":{"line":108,"column":7}},"63":{"start":{"line":100,"column":8},"end":{"line":107,"column":11}},"64":{"start":{"line":104,"column":12},"end":{"line":104,"column":56}},"65":{"start":{"line":105,"column":12},"end":{"line":105,"column":141}},"66":{"start":{"line":106,"column":12},"end":{"line":106,"column":19}},"67":{"start":{"line":109,"column":4},"end":{"line":117,"column":7}},"68":{"start":{"line":110,"column":8},"end":{"line":116,"column":11}},"69":{"start":{"line":114,"column":12},"end":{"line":114,"column":56}},"70":{"start":{"line":115,"column":12},"end":{"line":115,"column":19}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":56},"end":{"line":25,"column":57}},"loc":{"start":{"line":25,"column":71},"end":{"line":27,"column":1}},"line":25},"7":{"name":"(anonymous_7)","decl":{"start":{"line":41,"column":7},"end":{"line":41,"column":8}},"loc":{"start":{"line":41,"column":15},"end":{"line":45,"column":1}},"line":41},"8":{"name":"(anonymous_8)","decl":{"start":{"line":42,"column":30},"end":{"line":42,"column":31}},"loc":{"start":{"line":42,"column":36},"end":{"line":44,"column":5}},"line":42},"9":{"name":"(anonymous_9)","decl":{"start":{"line":47,"column":6},"end":{"line":47,"column":7}},"loc":{"start":{"line":47,"column":14},"end":{"line":50,"column":1}},"line":47},"10":{"name":"(anonymous_10)","decl":{"start":{"line":52,"column":43},"end":{"line":52,"column":44}},"loc":{"start":{"line":52,"column":49},"end":{"line":73,"column":1}},"line":52},"11":{"name":"(anonymous_11)","decl":{"start":{"line":53,"column":39},"end":{"line":53,"column":40}},"loc":{"start":{"line":53,"column":47},"end":{"line":62,"column":5}},"line":53},"12":{"name":"(anonymous_12)","decl":{"start":{"line":58,"column":17},"end":{"line":58,"column":18}},"loc":{"start":{"line":58,"column":31},"end":{"line":61,"column":9}},"line":58},"13":{"name":"(anonymous_13)","decl":{"start":{"line":63,"column":39},"end":{"line":63,"column":40}},"loc":{"start":{"line":63,"column":47},"end":{"line":72,"column":5}},"line":63},"14":{"name":"(anonymous_14)","decl":{"start":{"line":68,"column":17},"end":{"line":68,"column":18}},"loc":{"start":{"line":68,"column":31},"end":{"line":71,"column":9}},"line":68},"15":{"name":"(anonymous_15)","decl":{"start":{"line":75,"column":34},"end":{"line":75,"column":35}},"loc":{"start":{"line":75,"column":40},"end":{"line":96,"column":1}},"line":75},"16":{"name":"(anonymous_16)","decl":{"start":{"line":76,"column":67},"end":{"line":76,"column":68}},"loc":{"start":{"line":76,"column":75},"end":{"line":85,"column":5}},"line":76},"17":{"name":"(anonymous_17)","decl":{"start":{"line":80,"column":17},"end":{"line":80,"column":18}},"loc":{"start":{"line":80,"column":31},"end":{"line":84,"column":9}},"line":80},"18":{"name":"(anonymous_18)","decl":{"start":{"line":86,"column":62},"end":{"line":86,"column":63}},"loc":{"start":{"line":86,"column":70},"end":{"line":95,"column":5}},"line":86},"19":{"name":"(anonymous_19)","decl":{"start":{"line":90,"column":17},"end":{"line":90,"column":18}},"loc":{"start":{"line":90,"column":31},"end":{"line":94,"column":9}},"line":90},"20":{"name":"(anonymous_20)","decl":{"start":{"line":98,"column":33},"end":{"line":98,"column":34}},"loc":{"start":{"line":98,"column":39},"end":{"line":118,"column":1}},"line":98},"21":{"name":"(anonymous_21)","decl":{"start":{"line":99,"column":66},"end":{"line":99,"column":67}},"loc":{"start":{"line":99,"column":74},"end":{"line":108,"column":5}},"line":99},"22":{"name":"(anonymous_22)","decl":{"start":{"line":103,"column":17},"end":{"line":103,"column":18}},"loc":{"start":{"line":103,"column":31},"end":{"line":107,"column":9}},"line":103},"23":{"name":"(anonymous_23)","decl":{"start":{"line":109,"column":61},"end":{"line":109,"column":62}},"loc":{"start":{"line":109,"column":69},"end":{"line":117,"column":5}},"line":109},"24":{"name":"(anonymous_24)","decl":{"start":{"line":113,"column":17},"end":{"line":113,"column":18}},"loc":{"start":{"line":113,"column":31},"end":{"line":116,"column":9}},"line":113}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":27}},{"start":{"line":25,"column":31},"end":{"line":25,"column":51}},{"start":{"line":25,"column":56},"end":{"line":27,"column":1}}],"line":25},"17":{"loc":{"start":{"line":26,"column":11},"end":{"line":26,"column":61}},"type":"cond-expr","locations":[{"start":{"line":26,"column":37},"end":{"line":26,"column":40}},{"start":{"line":26,"column":43},"end":{"line":26,"column":61}}],"line":26},"18":{"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":33}},"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":15}},{"start":{"line":26,"column":19},"end":{"line":26,"column":33}}],"line":26}},"s":{"0":1,"1":10,"2":10,"3":10,"4":10,"5":10,"6":9,"7":10,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":10,"21":10,"22":1,"23":1,"24":1,"25":2,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1},"f":{"0":10,"1":9,"2":0,"3":1,"4":0,"5":1,"6":2,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1},"b":{"0":[1,1,1],"1":[1,0],"2":[10,0],"3":[10,0],"4":[10,10],"5":[0,10],"6":[10,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[10,0],"15":[10,10],"16":[1,1,1],"17":[0,2],"18":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/tests/Examples.tests.ts","sources":["/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/tests/Examples.tests.ts"],"names":[],"mappings":"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","sourcesContent":["import { configureServer } from '../config/server.config';\nimport chaiHttp from 'chai-http';\nimport dotenv from 'dotenv';\nimport chai, { expect } from 'chai';\nimport type { Server } from 'http';\ndotenv.config();\n\n// set up chai\nchai.use(chaiHttp);\nchai.should();\n\n// set up mock server\nconst app = configureServer();\nlet server: Server;\n\n// start mock server\nbefore(done => {\n  server = app.listen(1234, () => {\n    done();\n  });\n});\n\n// close mock server\nafter(done => {\n  server.close();\n  done();\n});\n\n// Test case\ndescribe('POST test/bodyParameterExample', () => {\n  it('should return a 418 response', done => {\n    chai\n      .request(app)\n      .get('/test/body')\n      .send({ name: 'Test' })\n      .end((err, res) => {\n        expect(res).to.have.status(418);\n        done();\n      });\n  });\n  it('should return a 400 response', done => {\n    chai\n      .request(app)\n      .get('/test/body')\n      .send({ name: '' })\n      .end((err, res) => {\n        expect(res).to.have.status(400);\n        done();\n      });\n  });\n});\n\n// test queryParameterExample\ndescribe('queryParameterExample', () => {\n  it('should return 418 and a message with the query parameter', done => {\n    chai\n      .request(app)\n      .get('/test/query?name=Bob')\n      .end((err, res) => {\n        expect(res).to.have.status(418);\n        expect(res.text).to.equal(\n          'I cant make coffee! Thanks for your request though, Bob. Great use of a query parameter!'\n        );\n        done();\n      });\n  });\n\n  it('should return 400 if no query parameter is provided', done => {\n    chai\n      .request(app)\n      .get('/test/query')\n      .end((err, res) => {\n        expect(res).to.have.status(400);\n        expect(res.text).to.equal('Name is required');\n        done();\n      });\n  });\n});\n\n// test queryParameterExample\ndescribe('pathParameterExample', () => {\n  it('should return 418 and a message with the path parameter', done => {\n    chai\n      .request(app)\n      .get('/test/path/Bob')\n      .end((err, res) => {\n        expect(res).to.have.status(418);\n        expect(res.text).to.equal(\n          'I cant make coffee! Thanks for your request though, Bob. Great use of a path parameter!'\n        );\n        done();\n      });\n  });\n\n  it('should return 404 if no path parameter is provided', done => {\n    chai\n      .request(app)\n      .get('/test/path')\n      .end((err, res) => {\n        expect(res).to.have.status(404);\n        done();\n      });\n  });\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"eb926cb7b384e7d6a00da1f77971d6942b26d85c","contentHash":"2878e325d3983cb49cce5718355d9c145d98425ba153981f7fbc4f218e33fe8a"},"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/config/server.config.ts":{"path":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/config/server.config.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":33}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":61}},"5":{"start":{"line":8,"column":18},"end":{"line":8,"column":53}},"6":{"start":{"line":9,"column":15},"end":{"line":9,"column":47}},"7":{"start":{"line":10,"column":17},"end":{"line":10,"column":51}},"8":{"start":{"line":11,"column":17},"end":{"line":11,"column":51}},"9":{"start":{"line":12,"column":24},"end":{"line":28,"column":1}},"10":{"start":{"line":13,"column":16},"end":{"line":13,"column":40}},"11":{"start":{"line":15,"column":4},"end":{"line":15,"column":38}},"12":{"start":{"line":16,"column":4},"end":{"line":16,"column":35}},"13":{"start":{"line":18,"column":4},"end":{"line":18,"column":37}},"14":{"start":{"line":19,"column":4},"end":{"line":19,"column":32}},"15":{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},"16":{"start":{"line":22,"column":8},"end":{"line":22,"column":46}},"17":{"start":{"line":25,"column":4},"end":{"line":25,"column":31}},"18":{"start":{"line":27,"column":4},"end":{"line":27,"column":15}},"19":{"start":{"line":29,"column":0},"end":{"line":29,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":24},"end":{"line":12,"column":25}},"loc":{"start":{"line":12,"column":30},"end":{"line":28,"column":1}},"line":12}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},{"start":{"line":21,"column":4},"end":{"line":23,"column":5}}],"line":21}},"s":{"0":1,"1":5,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":3,"12":3,"13":3,"14":3,"15":3,"16":0,"17":3,"18":3,"19":1},"f":{"0":5,"1":3},"b":{"0":[1,1,1],"1":[1,4],"2":[5,5],"3":[0,3]},"inputSourceMap":{"version":3,"file":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/config/server.config.ts","sources":["/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/config/server.config.ts"],"names":[],"mappings":";;;;;;AAAA,8DAAsC;AACtC,sDAA8B;AAC9B,gDAAwB;AACxB,oDAA4B;AAC5B,oDAA4B;AAErB,MAAM,eAAe,GAAG,GAAG,EAAE;IAClC,MAAM,GAAG,GAAG,IAAA,iBAAO,GAAE,CAAC;IAEtB,aAAa;IACb,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,oBAAoB;IAC7C,GAAG,CAAC,GAAG,CAAC,IAAA,cAAI,GAAE,CAAC,CAAC,CAAC,cAAc;IAE/B,WAAW;IACX,GAAG,CAAC,GAAG,CAAC,IAAA,gBAAM,GAAE,CAAC,CAAC;IAClB,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;IAE5B,UAAU;IACV,IAAI,OAAO,CAAC,GAAG,CAAC,WAAW,KAAK,MAAM,EAAE;QACtC,GAAG,CAAC,GAAG,CAAC,IAAA,gBAAM,EAAC,KAAK,CAAC,CAAC,CAAC;KACxB;IAED,SAAS;IACT,IAAA,gBAAM,EAAC,GAAG,CAAC,CAAC;IAEZ,oBAAoB;IACpB,OAAO,GAAG,CAAC;AACb,CAAC,CAAC;AArBW,QAAA,eAAe,mBAqB1B","sourcesContent":["import routes from '../routes/routes';\nimport express from 'express';\nimport cors from 'cors';\nimport helmet from 'helmet';\nimport morgan from 'morgan';\n\nexport const configureServer = () => {\n  const app = express();\n\n  // Middleware\n  app.use(express.json()); // Parse JSON bodies\n  app.use(cors()); // Enable CORS\n\n  // Security\n  app.use(helmet());\n  app.disable('x-powered-by');\n\n  // Logging\n  if (process.env.ENVIRONMENT !== 'test') {\n    app.use(morgan('dev'));\n  }\n\n  // Routes\n  routes(app);\n\n  // Create the server\n  return app;\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f3d5b282877ce0c22f1fa3215f92dd3fbc2ddfda","contentHash":"224aa519ff2593d48165a13c02ac1ab328d6ad189b90aac452d156dc39871b61"},"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/routes/routes.ts":{"path":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/routes/routes.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":31},"end":{"line":3,"column":77}},"2":{"start":{"line":4,"column":35},"end":{"line":4,"column":85}},"3":{"start":{"line":5,"column":32},"end":{"line":5,"column":95}},"4":{"start":{"line":6,"column":31},"end":{"line":6,"column":93}},"5":{"start":{"line":7,"column":31},"end":{"line":7,"column":93}},"6":{"start":{"line":8,"column":29},"end":{"line":8,"column":89}},"7":{"start":{"line":9,"column":26},"end":{"line":9,"column":67}},"8":{"start":{"line":10,"column":15},"end":{"line":35,"column":1}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":61}},"10":{"start":{"line":12,"column":40},"end":{"line":12,"column":59}},"11":{"start":{"line":14,"column":4},"end":{"line":14,"column":53}},"12":{"start":{"line":16,"column":4},"end":{"line":16,"column":74}},"13":{"start":{"line":17,"column":4},"end":{"line":17,"column":78}},"14":{"start":{"line":18,"column":4},"end":{"line":18,"column":71}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":81}},"16":{"start":{"line":21,"column":4},"end":{"line":21,"column":75}},"17":{"start":{"line":22,"column":4},"end":{"line":22,"column":71}},"18":{"start":{"line":23,"column":4},"end":{"line":23,"column":68}},"19":{"start":{"line":24,"column":4},"end":{"line":24,"column":70}},"20":{"start":{"line":26,"column":4},"end":{"line":26,"column":82}},"21":{"start":{"line":27,"column":4},"end":{"line":27,"column":78}},"22":{"start":{"line":28,"column":4},"end":{"line":28,"column":75}},"23":{"start":{"line":29,"column":4},"end":{"line":29,"column":77}},"24":{"start":{"line":31,"column":4},"end":{"line":33,"column":7}},"25":{"start":{"line":32,"column":8},"end":{"line":32,"column":52}},"26":{"start":{"line":34,"column":4},"end":{"line":34,"column":15}},"27":{"start":{"line":36,"column":0},"end":{"line":36,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":15},"end":{"line":10,"column":16}},"loc":{"start":{"line":10,"column":24},"end":{"line":35,"column":1}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":28},"end":{"line":12,"column":29}},"loc":{"start":{"line":12,"column":40},"end":{"line":12,"column":59}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":31,"column":12},"end":{"line":31,"column":13}},"loc":{"start":{"line":31,"column":24},"end":{"line":33,"column":5}},"line":31}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":3,"10":0,"11":3,"12":3,"13":3,"14":3,"15":3,"16":3,"17":3,"18":3,"19":3,"20":3,"21":3,"22":3,"23":3,"24":3,"25":1,"26":3,"27":1},"f":{"0":3,"1":0,"2":1},"b":{},"inputSourceMap":{"version":3,"file":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/routes/routes.ts","sources":["/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/routes/routes.ts"],"names":[],"mappings":";;AAAA,8EAK6C;AAC7C,sFAKiD;AACjD,gGAA6F;AAC7F,8FAA2F;AAC3F,8FAA2F;AAC3F,0FAAuF;AACvF,oEAA4D;AAG5D,MAAM,MAAM,GAAG,CAAC,GAAY,EAAE,EAAE;IAC9B,cAAc;IACd,GAAG,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,CAAU,EAAE,GAAa,EAAE,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;IAE5E,qBAAqB;IACrB,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,4BAAU,CAAC,CAAC;IAE/B,qBAAqB;IACrB,GAAG,CAAC,GAAG,CAAC,aAAa,EAAE,6CAAqB,CAAC,CAAC;IAC9C,GAAG,CAAC,GAAG,CAAC,mBAAmB,EAAE,2CAAoB,CAAC,CAAC;IACnD,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,2CAAoB,CAAC,CAAC;IAC5C,GAAG,CAAC,GAAG,CAAC,0BAA0B,EAAE,uCAAkB,CAAC,CAAC;IAExD,iCAAiC;IACjC,GAAG,CAAC,GAAG,CAAC,aAAa,EAAE,8CAAuB,CAAC,CAAC;IAChD,GAAG,CAAC,GAAG,CAAC,gBAAgB,EAAE,uCAAgB,CAAC,CAAC;IAC5C,GAAG,CAAC,IAAI,CAAC,aAAa,EAAE,sCAAe,CAAC,CAAC;IACzC,GAAG,CAAC,GAAG,CAAC,gBAAgB,EAAE,sCAAe,CAAC,CAAC;IAE3C,sCAAsC;IACtC,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,sDAA2B,CAAC,CAAC;IACnD,GAAG,CAAC,GAAG,CAAC,eAAe,EAAE,+CAAoB,CAAC,CAAC;IAC/C,GAAG,CAAC,IAAI,CAAC,YAAY,EAAE,8CAAmB,CAAC,CAAC;IAC5C,GAAG,CAAC,GAAG,CAAC,eAAe,EAAE,8CAAmB,CAAC,CAAC;IAE9C,MAAM;IACN,GAAG,CAAC,GAAG,CAAC,CAAC,CAAU,EAAE,GAAa,EAAE,EAAE;QACpC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,OAAO,GAAG,CAAC;AACb,CAAC,CAAC;AAEF,kBAAe,MAAM,CAAC","sourcesContent":["import {\n  getAllPassengersForUser,\n  getPassengerById,\n  createPassenger,\n  updatePassenger,\n} from '../controllers/Passenger.controller';\nimport {\n  getAllFlightRequestsForUser,\n  getFlightRequestById,\n  createFlightRequest,\n  updateFlightRequest,\n} from '../controllers/FlightRequest.controller';\nimport { queryParameterExample } from '../controllers/TestControllers/queryParameterExample';\nimport { pathParameterExample } from '../controllers/TestControllers/pathParameterExample';\nimport { bodyParameterExample } from '../controllers/TestControllers/bodyParameterExample';\nimport { retrievePassengers } from '../controllers/TestControllers/retrievePassengers';\nimport { createUser } from '../controllers/User.controller';\nimport type { Express, Request, Response } from 'express';\n\nconst routes = (app: Express) => {\n  // healthcheck\n  app.get('/healthcheck', (_: Request, res: Response) => res.sendStatus(200));\n\n  /* User Controller */\n  app.post('/user/', createUser);\n\n  /* Test Controller */\n  app.get('/test/query', queryParameterExample);\n  app.get('/test/path/:value', pathParameterExample);\n  app.get('/test/body', bodyParameterExample);\n  app.get('/test/retrievePassengers', retrievePassengers);\n\n  /* Passenger Controller Routes */\n  app.get('/passenger/', getAllPassengersForUser);\n  app.get('/passenger/:id', getPassengerById);\n  app.post('/passenger/', createPassenger);\n  app.put('/passenger/:id', updatePassenger);\n\n  /* Flight Request Controller Routes */\n  app.get('/requests/', getAllFlightRequestsForUser);\n  app.get('/requests/:id', getFlightRequestById);\n  app.post('/requests/', createFlightRequest);\n  app.put('/requests/:id', updateFlightRequest);\n\n  // 404\n  app.use((_: Request, res: Response) => {\n    res.status(404).send('404: Page not found');\n  });\n\n  return app;\n};\n\nexport default routes;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"27507d19afb16b75dd3552dc7139dcf81d649f6a","contentHash":"375984be33bd44d8b1bb769a4f97966bac69e3506fca32bfd16155a1a68d8097"},"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/controllers/Passenger.controller.ts":{"path":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/controllers/Passenger.controller.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":120}},"16":{"start":{"line":16,"column":20},"end":{"line":16,"column":48}},"17":{"start":{"line":17,"column":17},"end":{"line":17,"column":59}},"18":{"start":{"line":18,"column":15},"end":{"line":18,"column":38}},"19":{"start":{"line":19,"column":19},"end":{"line":19,"column":55}},"20":{"start":{"line":34,"column":32},"end":{"line":72,"column":2}},"21":{"start":{"line":34,"column":46},"end":{"line":72,"column":2}},"22":{"start":{"line":36,"column":19},"end":{"line":36,"column":28}},"23":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"24":{"start":{"line":38,"column":8},"end":{"line":38,"column":71}},"25":{"start":{"line":40,"column":4},"end":{"line":40,"column":30}},"26":{"start":{"line":41,"column":17},"end":{"line":43,"column":32}},"27":{"start":{"line":44,"column":4},"end":{"line":71,"column":5}},"28":{"start":{"line":46,"column":8},"end":{"line":65,"column":11}},"29":{"start":{"line":47,"column":12},"end":{"line":64,"column":15}},"30":{"start":{"line":48,"column":16},"end":{"line":63,"column":17}},"31":{"start":{"line":49,"column":20},"end":{"line":49,"column":48}},"32":{"start":{"line":50,"column":20},"end":{"line":50,"column":27}},"33":{"start":{"line":54,"column":45},"end":{"line":54,"column":47}},"34":{"start":{"line":55,"column":58},"end":{"line":58,"column":23}},"35":{"start":{"line":55,"column":130},"end":{"line":58,"column":22}},"36":{"start":{"line":56,"column":42},"end":{"line":56,"column":86}},"37":{"start":{"line":57,"column":24},"end":{"line":57,"column":57}},"38":{"start":{"line":60,"column":20},"end":{"line":60,"column":69}},"39":{"start":{"line":61,"column":46},"end":{"line":61,"column":128}},"40":{"start":{"line":61,"column":82},"end":{"line":61,"column":127}},"41":{"start":{"line":62,"column":20},"end":{"line":62,"column":55}},"42":{"start":{"line":69,"column":8},"end":{"line":69,"column":27}},"43":{"start":{"line":70,"column":8},"end":{"line":70,"column":72}},"44":{"start":{"line":73,"column":0},"end":{"line":73,"column":58}},"45":{"start":{"line":87,"column":25},"end":{"line":94,"column":2}},"46":{"start":{"line":87,"column":39},"end":{"line":94,"column":2}},"47":{"start":{"line":91,"column":22},"end":{"line":91,"column":64}},"48":{"start":{"line":93,"column":4},"end":{"line":93,"column":36}},"49":{"start":{"line":95,"column":0},"end":{"line":95,"column":44}},"50":{"start":{"line":108,"column":24},"end":{"line":119,"column":2}},"51":{"start":{"line":108,"column":38},"end":{"line":119,"column":2}},"52":{"start":{"line":116,"column":22},"end":{"line":116,"column":64}},"53":{"start":{"line":118,"column":4},"end":{"line":118,"column":36}},"54":{"start":{"line":120,"column":0},"end":{"line":120,"column":42}},"55":{"start":{"line":133,"column":24},"end":{"line":144,"column":2}},"56":{"start":{"line":133,"column":38},"end":{"line":144,"column":2}},"57":{"start":{"line":141,"column":22},"end":{"line":141,"column":64}},"58":{"start":{"line":143,"column":4},"end":{"line":143,"column":36}},"59":{"start":{"line":145,"column":0},"end":{"line":145,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":34,"column":32},"end":{"line":34,"column":33}},"loc":{"start":{"line":34,"column":46},"end":{"line":72,"column":2}},"line":34},"9":{"name":"(anonymous_9)","decl":{"start":{"line":34,"column":80},"end":{"line":34,"column":81}},"loc":{"start":{"line":34,"column":93},"end":{"line":72,"column":1}},"line":34},"10":{"name":"(anonymous_10)","decl":{"start":{"line":46,"column":53},"end":{"line":46,"column":54}},"loc":{"start":{"line":46,"column":76},"end":{"line":65,"column":9}},"line":46},"11":{"name":"(anonymous_11)","decl":{"start":{"line":47,"column":51},"end":{"line":47,"column":52}},"loc":{"start":{"line":47,"column":64},"end":{"line":64,"column":13}},"line":47},"12":{"name":"(anonymous_12)","decl":{"start":{"line":55,"column":122},"end":{"line":55,"column":123}},"loc":{"start":{"line":55,"column":130},"end":{"line":58,"column":22}},"line":55},"13":{"name":"(anonymous_13)","decl":{"start":{"line":55,"column":162},"end":{"line":55,"column":163}},"loc":{"start":{"line":55,"column":175},"end":{"line":58,"column":21}},"line":55},"14":{"name":"(anonymous_14)","decl":{"start":{"line":61,"column":67},"end":{"line":61,"column":68}},"loc":{"start":{"line":61,"column":82},"end":{"line":61,"column":127}},"line":61},"15":{"name":"(anonymous_15)","decl":{"start":{"line":87,"column":25},"end":{"line":87,"column":26}},"loc":{"start":{"line":87,"column":39},"end":{"line":94,"column":2}},"line":87},"16":{"name":"(anonymous_16)","decl":{"start":{"line":87,"column":73},"end":{"line":87,"column":74}},"loc":{"start":{"line":87,"column":86},"end":{"line":94,"column":1}},"line":87},"17":{"name":"(anonymous_17)","decl":{"start":{"line":108,"column":24},"end":{"line":108,"column":25}},"loc":{"start":{"line":108,"column":38},"end":{"line":119,"column":2}},"line":108},"18":{"name":"(anonymous_18)","decl":{"start":{"line":108,"column":72},"end":{"line":108,"column":73}},"loc":{"start":{"line":108,"column":85},"end":{"line":119,"column":1}},"line":108},"19":{"name":"(anonymous_19)","decl":{"start":{"line":133,"column":24},"end":{"line":133,"column":25}},"loc":{"start":{"line":133,"column":38},"end":{"line":144,"column":2}},"line":133},"20":{"name":"(anonymous_20)","decl":{"start":{"line":133,"column":72},"end":{"line":133,"column":73}},"loc":{"start":{"line":133,"column":85},"end":{"line":144,"column":1}},"line":133}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},{"start":{"line":37,"column":4},"end":{"line":39,"column":5}}],"line":37},"9":{"loc":{"start":{"line":42,"column":16},"end":{"line":42,"column":50}},"type":"binary-expr","locations":[{"start":{"line":42,"column":16},"end":{"line":42,"column":44}},{"start":{"line":42,"column":48},"end":{"line":42,"column":50}}],"line":42},"10":{"loc":{"start":{"line":48,"column":16},"end":{"line":63,"column":17}},"type":"if","locations":[{"start":{"line":48,"column":16},"end":{"line":63,"column":17}},{"start":{"line":48,"column":16},"end":{"line":63,"column":17}}],"line":48}},"s":{"0":1,"1":15,"2":3,"3":16,"4":15,"5":15,"6":0,"7":0,"8":0,"9":0,"10":31,"11":16,"12":1,"13":2,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":4,"22":4,"23":4,"24":1,"25":3,"26":3,"27":3,"28":3,"29":3,"30":3,"31":0,"32":0,"33":3,"34":3,"35":9,"36":9,"37":9,"38":3,"39":3,"40":9,"41":3,"42":0,"43":0,"44":1,"45":1,"46":0,"47":0,"48":0,"49":1,"50":1,"51":0,"52":0,"53":0,"54":1,"55":1,"56":0,"57":0,"58":0,"59":1},"f":{"0":16,"1":15,"2":3,"3":16,"4":15,"5":0,"6":31,"7":2,"8":4,"9":4,"10":3,"11":3,"12":9,"13":9,"14":9,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"b":{"0":[1,1,1],"1":[12,3],"2":[16,16],"3":[16,15],"4":[16,16],"5":[1,1,1],"6":[1,1],"7":[2,2],"8":[1,3],"9":[3,0],"10":[0,3]},"inputSourceMap":{"version":3,"file":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/controllers/Passenger.controller.ts","sources":["/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/controllers/Passenger.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { createTestPassengerData } from '../data/test-data';\nimport logger from '../util/logger';\nimport { trimPassenger } from '../util/trim';\nimport Airtable from 'airtable';\nimport type { FieldSet, Record } from 'airtable';\nimport type { PassengerData } from '../interfaces/passenger/passenger.interface';\nimport type { Request, Response } from 'express';\n\n/**\n * This function returns all passengers connected to a user\n *\n * Steps to complete:\n * 1. Get the userId from the query parameters, if it doesn't exist return a 400\n * 2. Make a call to AirTable to get all passengers for the user, if that fails return a 500 (hint, use try/catch)\n *   If there are no passengers for the user return a 400. (hint: use the AirTable API, see TestControllers/retrievePassengers.ts for an example)\n *  Another hint - we will be filtering by the \"Passenger ID\" field in the AirTable\n * 3. Remove any unnecessary data from the passengers (there is a lot of data in the AirTable response we don't need)\n * 4. Return the passengers for the user\n *\n * @param req - the request object\n * @param res - the response object\n */\nexport const getAllPassengersForUser = async (req: Request, res: Response) => {\n  // get the userId from the query parameters\n\n  const { id } = req.query;\n\n  if (!id) {\n    return res.status(400).json({ error: 'Passenger ID missing' });\n  }\n\n  logger.info(id);\n\n  const base = new Airtable({\n    apiKey: process.env.AIRTABLE_API_KEY || '',\n  }).base('appwPsfAb6U8CV3mf');\n\n  try {\n    // make a call to AirTable to get all passengers for the user\n    await base('Passengers').find(\n      id.toString(),\n      async function (err: any, record: any | undefined) {\n        if (err) {\n          logger.error(err);\n          return;\n        } else {\n          // get related passengers information\n          const accompPassengers = [] as Record<FieldSet>[];\n          const accompanyingPassengersPromise = record._rawJson.fields[\n            'Related Accompanying Passenger(s)'\n          ].map(async (id: string) => {\n            const passenger = await base('Passengers').find(id.toString());\n            accompPassengers.push(passenger);\n          });\n          // Remove any unnecessary data from the passengers\n          await Promise.all(accompanyingPassengersPromise);\n          const trimmedPassengers = accompPassengers.map(\n            (passenger: Record<FieldSet>) =>\n              trimPassenger(passenger._rawJson as unknown as PassengerData)\n          );\n          return res.send(trimmedPassengers);\n        }\n      }\n    );\n  } catch (err: any) {\n    // if that fails return a 500 (hint, use try/catch)\n    console.error(err);\n    return res.status(500).json({ error: 'Error fetching record' });\n  }\n};\n\n/**\n * This function returns a passenger for a given passengerId\n *\n * Steps to complete:\n * 1. Get the passengerId from the query parameters, if it doesn't exist return a 400\n * 2. Make a call to AirTable to get the passenger, if that fails return a 500 (hint, use try/catch)\n *   If there is no passenger for the passengerId return a 400. (hint: use the AirTable API, see TestControllers/retrievePassengers.ts for an example)\n * 3. Remove any unnecessary data from the passenger (there is a lot of data in the AirTable response we don't need)\n * 4. Return the passenger\n *\n * @param req - the request object\n * @param res - the response object\n */\nexport const getPassengerById = async (req: Request, res: Response) => {\n  // get the passengerId from the query parameters\n  // const { passengerId } = req.query;\n\n  // create a fake passenger\n  const passenger = createTestPassengerData();\n\n  // return the passenger\n  res.status(200).send(passenger);\n};\n\n/**\n * This function creates a passenger for a given user\n *\n * Steps to complete:\n * 1. Get the userId from the query parameters, if it doesn't exist return a 400\n * 2. Get the passenger data from the request body, if it doesn't exist return a 400\n * 3. Make a call to AirTable to create the passenger, if that fails return a 500 (hint, use try/catch)\n * 4. Return the created passenger\n *\n * @param req - the request object\n * @param res - the response object\n */\nexport const createPassenger = async (req: Request, res: Response) => {\n  // get the userId from the query parameters\n  // const { userId } = req.query;\n\n  // get the passenger data from the request body\n  // const data = req.body;\n\n  // validate the passenger data using Joi\n  // ...\n\n  // create a fake passenger\n  const passenger = createTestPassengerData();\n\n  // return the created passenger\n  res.status(200).send(passenger);\n};\n\n/**\n * This function updates a passenger for a given user\n *\n * Steps to complete:\n * 1. Get the passengerId from the query parameters, if it doesn't exist return a 400\n * 2. Get the passenger data from the request body, if it doesn't exist return a 400\n * 3. Make a call to AirTable to update the passenger, if that fails return a 500 (hint, use try/catch)\n * 4. Return the updated passenger\n *\n * @param req - the request object\n * @param res - the response object\n */\nexport const updatePassenger = async (req: Request, res: Response) => {\n  // get the passengerId from the query parameters\n  // const { passengerId } = req.query;\n\n  // get the passenger data from the request body\n  // const data = req.body;\n\n  // validate the passenger data using Joi\n  // ...\n\n  // create a fake passenger\n  const passenger = createTestPassengerData();\n\n  // return the updated passenger\n  res.status(200).send(passenger);\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7707db51e17639e0cb6ab9b64a9b09e7205cef14","contentHash":"9cd7f44ff0f0dc4ffd894f18c50b83029210223081e2a5f51b5fda935510e6d2"},"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/data/test-data.ts":{"path":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/data/test-data.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":42}},"4":{"start":{"line":12,"column":32},"end":{"line":117,"column":1}},"5":{"start":{"line":13,"column":22},"end":{"line":13,"column":54}},"6":{"start":{"line":14,"column":21},"end":{"line":14,"column":52}},"7":{"start":{"line":15,"column":21},"end":{"line":15,"column":60}},"8":{"start":{"line":16,"column":27},"end":{"line":18,"column":22}},"9":{"start":{"line":16,"column":40},"end":{"line":18,"column":22}},"10":{"start":{"line":19,"column":4},"end":{"line":116,"column":216}},"11":{"start":{"line":118,"column":0},"end":{"line":118,"column":58}},"12":{"start":{"line":125,"column":32},"end":{"line":256,"column":125}},"13":{"start":{"line":125,"column":54},"end":{"line":256,"column":124}},"14":{"start":{"line":257,"column":0},"end":{"line":257,"column":58}},"15":{"start":{"line":264,"column":36},"end":{"line":424,"column":297}},"16":{"start":{"line":264,"column":58},"end":{"line":424,"column":296}},"17":{"start":{"line":425,"column":0},"end":{"line":425,"column":66}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":32},"end":{"line":12,"column":33}},"loc":{"start":{"line":12,"column":53},"end":{"line":117,"column":1}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":27},"end":{"line":16,"column":28}},"loc":{"start":{"line":16,"column":40},"end":{"line":18,"column":22}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":125,"column":32},"end":{"line":125,"column":33}},"loc":{"start":{"line":125,"column":54},"end":{"line":256,"column":124}},"line":125},"3":{"name":"(anonymous_3)","decl":{"start":{"line":264,"column":36},"end":{"line":264,"column":37}},"loc":{"start":{"line":264,"column":58},"end":{"line":424,"column":296}},"line":264}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":33},"end":{"line":12,"column":48}},"type":"default-arg","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":48}}],"line":12},"1":{"loc":{"start":{"line":125,"column":33},"end":{"line":125,"column":48}},"type":"default-arg","locations":[{"start":{"line":125,"column":46},"end":{"line":125,"column":48}}],"line":125},"2":{"loc":{"start":{"line":264,"column":37},"end":{"line":264,"column":52}},"type":"default-arg","locations":[{"start":{"line":264,"column":50},"end":{"line":264,"column":52}}],"line":264}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1},"f":{"0":1,"1":1,"2":1,"3":1},"b":{"0":[1],"1":[1],"2":[1]},"inputSourceMap":{"version":3,"file":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/data/test-data.ts","sources":["/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/data/test-data.ts"],"names":[],"mappings":"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","sourcesContent":["import { AIRLINES } from './constants';\nimport { faker } from '@faker-js/faker';\nimport type { FlightRequestData } from '../interfaces/requests/flight-request.interface';\nimport type { PassengerData } from '../interfaces/passenger/passenger.interface';\nimport type { FlightLegData } from '../interfaces/legs/flight-leg.interface';\n\n/**\n * Creates a test passenger data object with random data\n *\n * @param manualData - Optional data to override the random data\n * @returns A test passenger data object\n */\nexport const createTestPassengerData = (\n  manualData: Partial<PassengerData> = {}\n): PassengerData => {\n  const firstName = faker.person.firstName();\n  const lastName = faker.person.lastName();\n  const birthday = faker.date.past().toISOString();\n  const getPreviousDay = (isoDate: string) =>\n    new Date(new Date(isoDate).getTime() - 24 * 60 * 60 * 1000)\n      .toISOString()\n      .split('T')[0];\n\n  return {\n    id: faker.string.uuid(),\n    createdTime: faker.date.recent().toISOString(),\n    fields: {\n      Type: faker.helpers.arrayElement([\n        'Patient',\n        'Accompanying Passenger',\n        'Partner Organization',\n      ]),\n      'First Name': firstName,\n      'Last Name': lastName,\n      'Date of Birth': birthday,\n      Gender: faker.helpers.arrayElement(['Female', 'Male']),\n      Street: faker.location.streetAddress(),\n      Country: faker.location.country(),\n      Email: faker.internet.email({\n        firstName: firstName,\n        lastName: lastName,\n      }),\n      'Household Income': faker.number.int({\n        min: 5000,\n        max: 400000,\n      }),\n      'Household Size': faker.number.int({\n        min: 1,\n        max: 8,\n      }),\n      Ethnicity: faker.helpers.arrayElements(\n        [\n          'American Indian or Alaska Native',\n          'Asian',\n          'Black or African American',\n          'Hispanic or Latino',\n          'Native Hawaiian or Other Pacific Islander',\n          'White',\n          'Other',\n        ],\n        faker.number.int({\n          min: 1,\n          max: 5,\n        })\n      ),\n      'Military Service': faker.helpers.arrayElement([\n        'Active',\n        'Veteran',\n        'Not Applicable',\n      ]),\n      'Military Member': faker.helpers.arrayElements(\n        ['Self', 'Spouse', 'Mother', 'Father', 'Other'],\n        faker.number.int({\n          min: 0,\n          max: 3,\n        })\n      ),\n      'How did you hear about us': faker.helpers.arrayElements(\n        ['Social Media', 'Internet Search', 'Friend or Family', 'Other'],\n        faker.number.int({\n          min: 1,\n          max: 1,\n        })\n      ),\n      'BL - Account Number': faker.finance.accountNumber(),\n      'All Flight Legs': faker.helpers.arrayElements(\n        [faker.string.uuid(), faker.string.uuid(), faker.string.uuid()],\n        faker.number.int({\n          min: 1,\n          max: 3,\n        })\n      ),\n      Diagnosis: faker.helpers.arrayElements(\n        [faker.string.uuid(), faker.string.uuid(), faker.string.uuid()],\n        faker.number.int({\n          min: 1,\n          max: 3,\n        })\n      ),\n      'Treatment Site Totals 2': [],\n      'Passenger ID': faker.string.uuid(),\n      'AirTable Record ID': faker.string.uuid(),\n      '# of Flight Legs': faker.number.int({\n        min: 1,\n        max: 10,\n      }),\n      '# of Booked Flight Requests (Patient)': faker.number.int({\n        min: 1,\n        max: 3,\n      }),\n      '# of Booked Flight Requests (Pass 2)': faker.number.int({\n        min: 1,\n        max: 3,\n      }),\n      '# of Booked Flight Requests (Pass 3)': faker.number.int({\n        min: 1,\n        max: 3,\n      }),\n      '# of Booked Flight Requests (Accompanying)': faker.number.int({\n        min: 1,\n        max: 3,\n      }),\n      '# of Booked Flight Requests': faker.number.int({\n        min: 1,\n        max: 10,\n      }),\n      'Departure Date/Time (from All Flight Legs)': faker.helpers.arrayElements(\n        [\n          faker.date.recent().toISOString(),\n          faker.date.recent().toISOString(),\n          faker.date.recent().toISOString(),\n        ],\n        faker.number.int({\n          min: 1,\n          max: 3,\n        })\n      ),\n      'Name (from Treatment Site Totals 2)': [],\n      'Name (from Treatment Site Totals 2) 2': [],\n      'PUR (from All Flight Legs)': faker.helpers.arrayElements<number>(\n        [\n          faker.number.int({\n            min: 1,\n            max: 10000,\n          }),\n          faker.number.int({\n            min: 1,\n            max: 10000,\n          }),\n          faker.number.int({\n            min: 1,\n            max: 10000,\n          }),\n        ],\n        faker.number.int({\n          min: 1,\n          max: 3,\n        })\n      ),\n      'Birth Month': faker.date.month(),\n      'Full Name': `${firstName} ${lastName}`,\n      'Passenger Names (from All Flight Legs)': faker.helpers.arrayElements(\n        [\n          `${faker.person.firstName()} ${faker.person.lastName()}`,\n          `${faker.person.firstName()} ${faker.person.lastName()}`,\n          `${faker.person.firstName()} ${faker.person.lastName()}`,\n        ],\n        faker.number.int({\n          min: 1,\n          max: 3,\n        })\n      ),\n      '# of Accompanying Passengers': faker.number.int({\n        min: 1,\n        max: 3,\n      }),\n      Age: faker.number.int({\n        min: 1,\n        max: 80,\n      }),\n      Birthday: birthday,\n      'Day Before Birthday': getPreviousDay(birthday),\n      'BL - Site 1 (from All Flight Legs)': faker.helpers.arrayElements(\n        [faker.company.name(), faker.company.name(), faker.company.name()],\n        faker.number.int({\n          min: 1,\n          max: 3,\n        })\n      ),\n      Created: faker.date.recent().toISOString(),\n      'Latest Trip': faker.date.recent().toISOString(),\n      'TS City, State (from Treatment Site Totals 2)': [],\n      ...manualData.fields,\n    },\n    ...manualData,\n  };\n};\n\n/**\n * Creates a test flight leg data object with random data\n *\n * @param manualData - Optional data to override the random data\n * @returns A test flight leg data object\n */\nexport const createTestFlightLegData = (\n  manualData: Partial<FlightLegData> = {}\n) => ({\n  id: faker.string.uuid(),\n  createdTime: faker.date.recent().toISOString(),\n  fields: {\n    Status: faker.helpers.arrayElement([\n      'Pending',\n      'Booked',\n      'Rescheduled',\n      'Rebooked',\n      'Canceled',\n      'Did Not Fly',\n    ]),\n    Airline: faker.helpers.arrayElement(AIRLINES),\n    'BL - Departure Airport': faker.location.city(),\n    'Departure Date/Time': faker.date.anytime().toString(),\n    'BL - Arrival Airport': faker.location.city(),\n    'Arrival Date/Time': faker.date.recent().toISOString(),\n    'Nautical Miles': faker.number.int({\n      min: 200,\n      max: 10000,\n    }),\n    PUR: faker.number.int({\n      min: 1,\n      max: 10000,\n    }),\n    'BL - # of PAX': faker.number.int({\n      min: 1,\n      max: 100,\n    }),\n    'BL - Treatment Type': faker.helpers.arrayElement([\n      'Chemotherapy',\n      'Radiation',\n      'Surgery',\n      'Clinical Trial',\n      'Other',\n    ]),\n    'BL - Site 1': faker.company.name(),\n    Passengers: faker.helpers.arrayElements(\n      [faker.string.uuid(), faker.string.uuid(), faker.string.uuid()],\n      faker.number.int({\n        min: 1,\n        max: 3,\n      })\n    ),\n    'Departure Airport': faker.string.alpha(3).toLocaleUpperCase(),\n    'Arrival Airport': faker.string.alpha(3).toLocaleUpperCase(),\n    'BL - Site 1 Links': faker.helpers.arrayElements(\n      [faker.internet.url(), faker.internet.url(), faker.internet.url()],\n      faker.number.int({\n        min: 1,\n        max: 3,\n      })\n    ),\n    'Leg ID': faker.string.uuid(),\n    '# of Linked PAX': faker.number.int({\n      min: 1,\n      max: 3,\n    }),\n    'Leg Type': faker.helpers.arrayElement(['Departure', 'Connecting', 'Return']),\n    '# of PAX': faker.number.int({\n      min: 1,\n      max: 3,\n    }),\n    'Total Miles': faker.number.int({\n      min: 200,\n      max: 10000,\n    }),\n    'Passenger Names': faker.helpers.arrayElements(\n      [\n        `${faker.person.firstName()} ${faker.person.lastName()}`,\n        `${faker.person.firstName()} ${faker.person.lastName()}`,\n        `${faker.person.firstName()} ${faker.person.lastName()}`,\n      ],\n      faker.number.int({\n        min: 1,\n        max: 3,\n      })\n    ),\n    'Total Cost': faker.number.int({\n      min: 100,\n      max: 2000,\n    }),\n    'Cost per PAX': faker.number.int({\n      min: 1,\n      max: 10000,\n    }),\n    'AirTable Record ID': faker.string.uuid(),\n    'Request AirTable Record ID': faker.helpers.arrayElements(\n      ['request1', 'request2', 'request3', 'request4', 'request5'],\n      faker.number.int({\n        min: 1,\n        max: 1,\n      })\n    ),\n    'Passenger AirTable Record IDs': faker.helpers.arrayElements(\n      [faker.string.uuid(), faker.string.uuid(), faker.string.uuid()],\n      faker.number.int({\n        min: 1,\n        max: 3,\n      })\n    ),\n    'Log Airline Credit': {\n      label: faker.company.name(),\n      url: faker.internet.url(),\n    },\n    'Creation Date': faker.date.recent().toISOString(),\n    'Patient Name': faker.helpers.arrayElements(\n      [\n        `${faker.person.firstName()} ${faker.person.lastName()}`,\n        `${faker.person.firstName()} ${faker.person.lastName()}`,\n        `${faker.person.firstName()} ${faker.person.lastName()}`,\n      ],\n      faker.number.int({\n        min: 1,\n        max: 3,\n      })\n    ),\n    'State (from Passengers)': faker.helpers.arrayElements(\n      [faker.location.state(), faker.location.state(), faker.location.state()],\n      faker.number.int({\n        min: 1,\n        max: 3,\n      })\n    ),\n    'State (from Departure Airport)': faker.helpers.arrayElements(\n      [faker.location.state(), faker.location.state(), faker.location.state()],\n      faker.number.int({\n        min: 1,\n        max: 3,\n      })\n    ),\n    'State (from Arrival Airport)': faker.helpers.arrayElements(\n      [faker.location.state(), faker.location.state(), faker.location.state()],\n      faker.number.int({\n        min: 1,\n        max: 3,\n      })\n    ),\n    'State (from Passengers) 2': faker.helpers.arrayElements(\n      [faker.location.state(), faker.location.state(), faker.location.state()],\n      faker.number.int({\n        min: 1,\n        max: 3,\n      })\n    ),\n    'State (from Departure Airport) 2': faker.helpers.arrayElements(\n      [faker.location.state(), faker.location.state(), faker.location.state()],\n      faker.number.int({\n        min: 1,\n        max: 3,\n      })\n    ),\n    'Date of Birth (from Passengers)': faker.helpers.arrayElements(\n      [\n        faker.date.past().toISOString(),\n        faker.date.past().toISOString(),\n        faker.date.past().toISOString(),\n      ],\n      faker.number.int({\n        min: 1,\n        max: 3,\n      })\n    ),\n    'Patient Latest Trip': faker.helpers.arrayElements(\n      [\n        faker.date.past().toISOString(),\n        faker.date.past().toISOString(),\n        faker.date.past().toISOString(),\n      ],\n      faker.number.int({\n        min: 1,\n        max: 3,\n      })\n    ),\n    'Is Latest Trip': faker.helpers.arrayElement(['Yes', 'No']),\n    'Home Phone (from Passengers)': faker.helpers.arrayElements(\n      [faker.phone.number(), faker.phone.number(), faker.phone.number()],\n      faker.number.int({\n        min: 1,\n        max: 3,\n      })\n    ),\n    'Street (from Passengers)': faker.helpers.arrayElements(\n      [\n        faker.location.streetAddress(),\n        faker.location.streetAddress(),\n        faker.location.streetAddress(),\n      ],\n      faker.number.int({\n        min: 1,\n        max: 3,\n      })\n    ),\n    City: faker.helpers.arrayElements(\n      [faker.location.city(), faker.location.city(), faker.location.city()],\n      faker.number.int({\n        min: 1,\n        max: 3,\n      })\n    ),\n    'State (from Passengers) 3': faker.helpers.arrayElements(\n      [faker.location.state(), faker.location.state(), faker.location.state()],\n      faker.number.int({\n        min: 1,\n        max: 3,\n      })\n    ),\n    'Zip (from Passengers)': faker.helpers.arrayElements(\n      [\n        faker.location.zipCode(),\n        faker.location.zipCode(),\n        faker.location.zipCode(),\n      ],\n      faker.number.int({\n        min: 1,\n        max: 3,\n      })\n    ),\n    'Diagnosis (from Passengers)': faker.helpers.arrayElements(\n      [faker.lorem.sentence(), faker.lorem.sentence(), faker.lorem.sentence()],\n      faker.number.int({\n        min: 1,\n        max: 3,\n      })\n    ),\n    'Date of Birth (from Passengers) 2': faker.helpers.arrayElements(\n      [\n        faker.date.past().toISOString(),\n        faker.date.past().toISOString(),\n        faker.date.past().toISOString(),\n      ],\n      faker.number.int({\n        min: 1,\n        max: 3,\n      })\n    ),\n    'TS City, State (from Treatment Site Totals 2) (from Passengers)':\n      faker.helpers.arrayElements(\n        [faker.location.city(), faker.location.city(), faker.location.city()],\n        faker.number.int({\n          min: 1,\n          max: 3,\n        })\n      ),\n    '48 Hours After Flight': faker.helpers.arrayElement(['Yes', 'No']),\n    ...manualData.fields,\n  },\n  ...manualData,\n});\n\n/**\n * Creates a test flight request data object with random data\n *\n * @param manualData - Optional data to override the random data\n * @returns A test flight request data object\n */\nexport const createTestFlightRequestData = (\n  manualData: Partial<FlightRequestData> = {}\n) =>\n  ({\n    id: faker.string.uuid(),\n    createdTime: faker.date.recent().toISOString(),\n    fields: {\n      'Submission ID': faker.string.uuid(),\n      'Trip Type': faker.helpers.arrayElement(['One Way', 'Roundtrip']),\n      'Departure Date': faker.date.future().toISOString().split('T')[0],\n      'Request Type': faker.helpers.arrayElement([\n        'Service Dog',\n        'Service Dog Retrieval/Training',\n        'Treatment',\n        'Treatment - Clinical Trial',\n        'Treatment - Surgery',\n        'Treatment - Radiation',\n        'Treatment - Chemotherapy',\n        'Treatment - Other',\n      ]),\n      'Household Size': faker.number.int({\n        min: 1,\n        max: 8,\n      }),\n      'Passenger 2 Approval Status': faker.helpers.arrayElement([\n        'Approved',\n        'Denied',\n        'Pending',\n      ]),\n      'How did you hear about us?': faker.helpers.arrayElement([\n        'Local Physician',\n        'Social Media',\n        'Internet Search',\n        'Friend or Family',\n        'Other',\n      ]),\n      Diagnosis: faker.lorem.sentence(),\n      'Passenger 3': faker.helpers.arrayElements(\n        [faker.string.uuid(), faker.string.uuid(), faker.string.uuid()],\n        faker.number.int({\n          min: 1,\n          max: 3,\n        })\n      ),\n      'Patient Type': faker.helpers.arrayElement([\n        'Patient',\n        'Accompanying Passenger',\n        'Partner Organization',\n      ]),\n      Ethnicity: faker.helpers.arrayElements(\n        [\n          'American Indian/Alaskan Native',\n          'Asian',\n          'Black',\n          'Hispanic/Latino',\n          'Native Hawaiian/Pacific Islander',\n          'White',\n          'Other',\n        ],\n        faker.number.int({\n          min: 1,\n          max: 3,\n        })\n      ),\n      'Treatment City': faker.location.city(),\n      Education: faker.helpers.arrayElement([\n        'Less than high school degree',\n        'High school degree or equivalent',\n        'Some college, no degree',\n        'Associate degree',\n        \"Bachelor's degree\",\n        'Graduate or professional degree',\n      ]),\n      'Treatment Phone': faker.phone.number(),\n      'Submission Date': faker.date.recent().toISOString().split('T')[0],\n      'Alt Destination Airport': faker.string.alpha(3).toLocaleUpperCase(),\n      'Primary Treatment Doctor': faker.person.fullName(),\n      'Wheelchair?': faker.helpers.arrayElement([\n        'Yes, bringing own',\n        'Yes, need to borrow',\n        'No',\n      ]),\n      'Flight Specialist': faker.person.fullName(),\n      'Appt Date': faker.date.future().toISOString().split('T')[0],\n      'Passenger 3 Approval Status': faker.helpers.arrayElement([\n        'Approved',\n        'Denied',\n        'Pending',\n      ]),\n      'First Request': faker.helpers.arrayElement(['Yes', 'No']),\n      'Type of Treatment': faker.helpers.arrayElement([\n        'Treatment',\n        'Treatment - Clinical Trial',\n        'Treatment - Surgery',\n        'Treatment - Radiation',\n        'Treatment - Chemotherapy',\n        'Treatment - Other',\n      ]),\n      'Passenger 3 Reason': faker.lorem.sentence(),\n      'Military Member': faker.helpers.arrayElement([\n        'Self',\n        'Spouse',\n        'Mother',\n        'Father',\n        'Other',\n      ]),\n      'Flight Legs': faker.helpers.arrayElements(\n        [faker.string.uuid(), faker.string.uuid(), faker.string.uuid()],\n        faker.number.int({\n          min: 1,\n          max: 3,\n        })\n      ),\n      Status: faker.helpers.arrayElement([\n        'Pending',\n        'Booked',\n        'Rescheduled',\n        'Rebooked',\n        'Canceled',\n        'Did Not Fly',\n      ]),\n      'Household Income': faker.number.int({\n        min: 5000,\n        max: 400000,\n      }),\n      'Sources of Income': faker.lorem.sentence(),\n      'Oxygen?': faker.helpers.arrayElement(['Yes', 'No']),\n      'Origin Airport': faker.string.alpha(3).toLocaleUpperCase(),\n      'Treatment Fax': faker.phone.number(),\n      Employment: faker.helpers.arrayElement([\n        'Employed, working 40+ hours per week',\n        'Employed, working 1-39 hours per week',\n        'Unemployed, looking for work',\n        'Unemployed, not looking for work',\n        'Retired',\n        'Student',\n        'Homemaker',\n        'Unable to work',\n        'Other',\n      ]),\n      'Martial Status': faker.helpers.arrayElement([\n        'Single',\n        'Married',\n        'Divorced',\n        'Widowed',\n      ]),\n      'Military Service': faker.helpers.arrayElement([\n        'Active',\n        'Veteran',\n        'Not Applicable',\n      ]),\n      'Passenger 3 Different Return': faker.helpers.arrayElement(['Yes', 'No']),\n      Patient: faker.helpers.arrayElements(\n        [faker.string.uuid(), faker.string.uuid(), faker.string.uuid()],\n        faker.number.int({\n          min: 1,\n          max: 3,\n        })\n      ),\n      'Passenger 2': faker.helpers.arrayElements(\n        [faker.string.uuid(), faker.string.uuid(), faker.string.uuid()],\n        faker.number.int({\n          min: 1,\n          max: 3,\n        })\n      ),\n      'Return Date': faker.date.future().toISOString().split('T')[0],\n      'Treatment Site': faker.company.name(),\n      'Treatment State': faker.location.streetAddress(),\n      'Passenger 3 Return Date': faker.date.future().toISOString().split('T')[0],\n      'Patient Age': faker.number.int({\n        min: 1,\n        max: 80,\n      }),\n      'Passenger 2 Different Return': faker.helpers.arrayElement(['Yes', 'No']),\n      'Destination Airport': faker.string.alpha(3).toLocaleUpperCase(),\n      'Alt. Origin Airport': faker.string.alpha(3).toLocaleUpperCase(),\n      'AirTable Record ID': faker.string.uuid(),\n      'Patient AirTable Record ID': faker.helpers.arrayElements(\n        [faker.string.uuid(), faker.string.uuid(), faker.string.uuid()],\n        faker.number.int({\n          min: 1,\n          max: 3,\n        })\n      ),\n      'Passenger 2 AirTable Record ID': faker.helpers.arrayElements(\n        [faker.string.uuid(), faker.string.uuid(), faker.string.uuid()],\n        faker.number.int({\n          min: 1,\n          max: 3,\n        })\n      ),\n      'Passenger 3 AirTable Record ID': faker.helpers.arrayElements(\n        [faker.string.uuid(), faker.string.uuid(), faker.string.uuid()],\n        faker.number.int({\n          min: 1,\n          max: 3,\n        })\n      ),\n      'Passenger AirTable Record IDs': faker.helpers.arrayElements(\n        [faker.string.uuid(), faker.string.uuid(), faker.string.uuid()],\n        faker.number.int({\n          min: 1,\n          max: 3,\n        })\n      ),\n      'Add a Flight Leg': {\n        label: faker.company.name(),\n        url: faker.internet.url(),\n      },\n      'Existing Diagnoses': faker.helpers.arrayElements(\n        [faker.lorem.sentence(), faker.lorem.sentence(), faker.lorem.sentence()],\n        faker.number.int({\n          min: 1,\n          max: 3,\n        })\n      ),\n      'Total Nautical Miles': faker.number.int({\n        min: 200,\n        max: 10000,\n      }),\n      'Total PUR': faker.number.int({\n        min: 1,\n        max: 10000,\n      }),\n      'Total GIK': faker.number.int({\n        min: 1,\n        max: 10000,\n      }),\n      'Total Cost': faker.number.int({\n        min: 1,\n        max: 10000,\n      }),\n      '# of Legs': faker.number.int({\n        min: 1,\n        max: 10,\n      }),\n      'Per Leg Total': faker.number.int({\n        min: 1,\n        max: 10000,\n      }),\n      'Per Leg PUR': faker.number.int({\n        min: 1,\n        max: 10000,\n      }),\n      'Per Leg GIK': faker.number.int({\n        min: 1,\n        max: 10000,\n      }),\n      'Total # of PAX': faker.number.int({\n        min: 1,\n        max: 10,\n      }),\n      'Total # of Legs': faker.number.int({\n        min: 1,\n        max: 10,\n      }),\n      'Patient First Name': faker.person.firstName(),\n      'Patient Last Name': faker.person.lastName(),\n      'Patient Name': faker.person.fullName(),\n      Airline: faker.helpers.arrayElements(\n        AIRLINES,\n        faker.number.int({\n          min: 1,\n          max: 3,\n        })\n      ),\n      'T-Minus Blacklane Email': faker.date.future().toISOString().split('T')[0],\n      '48 Hours After Booked': faker.date.future().toISOString().split('T')[0],\n      'Request ID': faker.string.uuid(),\n      Email: faker.internet.email(),\n      ...manualData.fields,\n    },\n    ...manualData,\n  }) as FlightRequestData;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"be70f90c53c4acf404b183ffe573ab3b083b7a49","contentHash":"0cf02ef84f10d6d72084c38d7537a12f086aa7df8c5408144bf85a93aa91146a"},"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/data/constants.ts":{"path":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/data/constants.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":76,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/data/constants.ts","sources":["/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/data/constants.ts"],"names":[],"mappings":";;;AAAa,QAAA,QAAQ,GAAG;IACtB,wBAAwB;IACxB,iBAAiB;IACjB,qBAAqB;IACrB,iBAAiB;IACjB,gBAAgB;IAChB,gBAAgB;IAChB,aAAa;IACb,iBAAiB;IACjB,iBAAiB;IACjB,sBAAsB;IACtB,eAAe;IACf,kBAAkB;IAClB,iBAAiB;IACjB,cAAc;IACd,0BAA0B;IAC1B,wBAAwB;IACxB,cAAc;IACd,mBAAmB;IACnB,sBAAsB;IACtB,iBAAiB;IACjB,cAAc;IACd,yBAAyB;IACzB,cAAc;IACd,wBAAwB;IACxB,kBAAkB;IAClB,oBAAoB;IACpB,0BAA0B;IAC1B,YAAY;IACZ,kBAAkB;IAClB,eAAe;IACf,eAAe;IACf,6BAA6B;IAC7B,kBAAkB;IAClB,uBAAuB;IACvB,wBAAwB;IACxB,iBAAiB;IACjB,kBAAkB;IAClB,sBAAsB;IACtB,gCAAgC;IAChC,eAAe;IACf,oBAAoB;IACpB,aAAa;IACb,aAAa;IACb,uBAAuB;IACvB,cAAc;IACd,eAAe;IACf,eAAe;IACf,gBAAgB;IAChB,oBAAoB;IACpB,aAAa;IACb,kBAAkB;IAClB,oBAAoB;IACpB,iBAAiB;IACjB,cAAc;IACd,aAAa;IACb,mBAAmB;IACnB,aAAa;IACb,eAAe;IACf,gBAAgB;IAChB,iBAAiB;IACjB,uBAAuB;IACvB,sBAAsB;IACtB,aAAa;IACb,iBAAiB;IACjB,eAAe;IACf,qBAAqB;IACrB,uBAAuB;IACvB,eAAe;IACf,gBAAgB;IAChB,gCAAgC;IAChC,eAAe;CAChB,CAAC","sourcesContent":["export const AIRLINES = [\n  'AA - American Airlines',\n  'AC - Air Canada',\n  'AE - American Eagle',\n  'AF - Air France',\n  'AG - Allegiant',\n  'AI - Air India',\n  'AK - Alaska',\n  'AL - Aer Lingus',\n  'AM - AeroMexico',\n  'AN - Air New Zealand',\n  'AO - Aeroflot',\n  'AR - Air Transat',\n  'AS - Air Serbia',\n  'AT - AirTran',\n  'ATA - American Trans Air',\n  'AU - Austrian Airlines',\n  'AV - Avianca',\n  'AW - America West',\n  'BA - British Airways',\n  'BH - Bahamasair',\n  'BS - Big Sky',\n  'CA - Corporate Airlines',\n  'CM - Com-Air',\n  'CN - Canadian Airlines',\n  'CO - Continental',\n  'CP - Copa Airlines',\n  'DA - Domodedovo Airlines',\n  'DL - Delta',\n  'EJ - Express Jet',\n  'EK - Emirates',\n  'FT - Frontier',\n  'GA - Grenadine Air Alliance',\n  'GL - Great Lakes',\n  'HA - Horizon Airlines',\n  'HI - Hawaiian Airlines',\n  'IA - Island Air',\n  'IC - Iceland Air',\n  'JB - JetBlue Airways',\n  'KLM - KLM Royal Dutch Airlines',\n  'LH - Lufhansa',\n  'LT - Liat Airlines',\n  'ME - Midway',\n  'MS - Mesaba',\n  'MU - Mustique Airways',\n  'MW - Midwest',\n  'MX - Mexicana',\n  'NA - National',\n  'NW - Northwest',\n  'OC - One Caribbean',\n  'QA - Qantas',\n  'RA - Ravn Alaska',\n  'SA - South African',\n  'SC - SunCountry',\n  'SK - Skywest',\n  'SM - Skyway',\n  'SN - Scandinavian',\n  'SP - Spirit',\n  'SVG - SVG Air',\n  'SW - Southwest',\n  'TA - Tropic Air',\n  'TK - Turkish Airlines',\n  'TWA - TransWorld Air',\n  'UN - United',\n  'US - US Airways',\n  'VA - Vanguard',\n  'VG - Virgin America',\n  'VL - Volaris Airlines',\n  'WJ - West Jet',\n  'US - US Aiways',\n  'SAE - Southern Airways Express',\n  'Qatar Airways',\n];\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b6b5a14635c59dd4aca4b19ec8bcff862eb70e4e","contentHash":"0d67ba5282f879eb7de7e937ec90d63a4c12e87e4021afda9ea3955667907d3c"},"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/util/logger.ts":{"path":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/util/logger.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":15},"end":{"line":6,"column":47}},"4":{"start":{"line":7,"column":16},"end":{"line":7,"column":49}},"5":{"start":{"line":8,"column":12},"end":{"line":20,"column":2}},"6":{"start":{"line":19,"column":21},"end":{"line":19,"column":67}},"7":{"start":{"line":21,"column":0},"end":{"line":21,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":15},"end":{"line":19,"column":16}},"loc":{"start":{"line":19,"column":21},"end":{"line":19,"column":67}},"line":19}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":4,"7":1},"f":{"0":2,"1":4},"b":{"0":[1,1,1],"1":[0,2],"2":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/util/logger.ts","sources":["/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/util/logger.ts"],"names":[],"mappings":";;;;;AAAA,gDAA0B;AAC1B,kDAA0B;AAE1B,MAAM,GAAG,GAAG,IAAA,cAAM,EAAC;IACjB,IAAI,EAAE;QACJ,GAAG,EAAE,KAAK;KACX;IACD,SAAS,EAAE;QACT,MAAM,EAAE,aAAa;QACrB,OAAO,EAAE;YACP,QAAQ,EAAE,IAAI;YACd,MAAM,EAAE,cAAc;SACvB;KACF;IACD,SAAS,EAAE,GAAG,EAAE,CAAC,YAAY,IAAA,eAAK,GAAE,CAAC,MAAM,EAAE,GAAG;CACjD,CAAC,CAAC;AAEH,kBAAe,GAAG,CAAC","sourcesContent":["import logger from 'pino';\nimport dayjs from 'dayjs';\n\nconst log = logger({\n  base: {\n    pid: false,\n  },\n  transport: {\n    target: 'pino-pretty',\n    options: {\n      colorize: true,\n      ignore: 'pid,hostname',\n    },\n  },\n  timestamp: () => `,\"time\":\"${dayjs().format()}\"`,\n});\n\nexport default log;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3112403c68170fadecc6bade3d6b8210d05a10ce","contentHash":"ed7f8418515608c278c66cb72140b11cff9882022279f827cc6e6daeeedf8dfc"},"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/util/trim.ts":{"path":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/util/trim.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":77}},"2":{"start":{"line":4,"column":22},"end":{"line":37,"column":1}},"3":{"start":{"line":5,"column":40},"end":{"line":5,"column":49}},"4":{"start":{"line":6,"column":80},"end":{"line":6,"column":86}},"5":{"start":{"line":7,"column":29},"end":{"line":35,"column":5}},"6":{"start":{"line":36,"column":4},"end":{"line":36,"column":28}},"7":{"start":{"line":38,"column":0},"end":{"line":38,"column":38}},"8":{"start":{"line":39,"column":20},"end":{"line":96,"column":1}},"9":{"start":{"line":40,"column":40},"end":{"line":40,"column":47}},"10":{"start":{"line":41,"column":65},"end":{"line":41,"column":71}},"11":{"start":{"line":42,"column":27},"end":{"line":94,"column":5}},"12":{"start":{"line":95,"column":4},"end":{"line":95,"column":26}},"13":{"start":{"line":97,"column":0},"end":{"line":97,"column":34}},"14":{"start":{"line":98,"column":22},"end":{"line":129,"column":1}},"15":{"start":{"line":99,"column":40},"end":{"line":99,"column":47}},"16":{"start":{"line":100,"column":44},"end":{"line":100,"column":50}},"17":{"start":{"line":101,"column":23},"end":{"line":127,"column":5}},"18":{"start":{"line":128,"column":4},"end":{"line":128,"column":22}},"19":{"start":{"line":130,"column":0},"end":{"line":130,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":22},"end":{"line":4,"column":23}},"loc":{"start":{"line":4,"column":37},"end":{"line":37,"column":1}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":39,"column":20},"end":{"line":39,"column":21}},"loc":{"start":{"line":39,"column":33},"end":{"line":96,"column":1}},"line":39},"2":{"name":"(anonymous_2)","decl":{"start":{"line":98,"column":22},"end":{"line":98,"column":23}},"loc":{"start":{"line":98,"column":35},"end":{"line":129,"column":1}},"line":98}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":11,"4":11,"5":11,"6":11,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1},"f":{"0":11,"1":1,"2":1},"b":{},"inputSourceMap":{"version":3,"file":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/util/trim.ts","sources":["/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/util/trim.ts"],"names":[],"mappings":"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","sourcesContent":["import type { FlightLegData } from '../interfaces/legs/flight-leg.interface';\nimport type { TrimmedFlightLeg } from '../interfaces/legs/trimmed-flight-leg.interface';\nimport type { PassengerData } from '../interfaces/passenger/passenger.interface';\nimport type { TrimmedPassenger } from '../interfaces/passenger/trimmed-passenger.interface';\nimport type { FlightRequestData } from '../interfaces/requests/flight-request.interface';\nimport type { TrimmedFlightRequest } from '../interfaces/requests/trimmed-flight-request.interface';\n\nexport const trimPassenger = (passenger: PassengerData): TrimmedPassenger => {\n  const { id, createdTime, fields } = passenger;\n\n  const { Type, Gender, Street, Country, Email, Ethnicity, Diagnosis, Age } =\n    fields;\n\n  const trimmedPassenger: TrimmedPassenger = {\n    id: id,\n    createdTime: createdTime,\n    Type: Type,\n    Relationship: fields['Relationship'],\n    'First Name': fields['First Name'],\n    'Last Name': fields['Last Name'],\n    'Date of Birth': fields['Date of Birth'],\n    Gender: Gender,\n    Street: Street,\n    Country: Country,\n    Email: Email,\n    'Household Income': fields['Household Income'],\n    'Household Size': fields['Household Size'],\n    Ethnicity: Ethnicity,\n    'Military Service': fields['Military Service'],\n    'Military Member': fields['Military Member'],\n    'How did you hear about us': fields['How did you hear about us'],\n    'All Flight Legs': fields['All Flight Legs'],\n    Diagnosis: Diagnosis,\n    'AirTable Record ID': fields['AirTable Record ID'],\n    '# of Flight Legs': fields['# of Flight Legs'],\n    '# of Booked Flight Requests': fields['# of Booked Flight Requests'],\n    'Birth Month': fields['Birth Month'],\n    'Full Name': fields['Full Name'],\n    Age: Age,\n    'Latest Trip': fields['Latest Trip'],\n    string: undefined\n  };\n\n  return trimmedPassenger;\n};\n\nexport const trimRequest = (request: FlightRequestData): TrimmedFlightRequest => {\n  const { id, createdTime, fields } = request;\n\n  const { Diagnosis, Ethnicity, Education, Status, Patient } = fields;\n\n  const trimmedRequest: TrimmedFlightRequest = {\n    id: id,\n    createdTime: createdTime,\n    'Submission ID': fields['Submission ID'],\n    'Trip Type': fields['Trip Type'],\n    'Departure Date': fields['Departure Date'],\n    'Request Type': fields['Request Type'],\n    'Household Size': fields['Household Size'],\n    'Passenger 2 Approval Status': fields['Passenger 2 Approval Status'],\n    Diagnosis: Diagnosis,\n    'Passenger 3': fields['Passenger 3'],\n    'Patient Type': fields['Patient Type'],\n    Ethnicity: Ethnicity,\n    'Treatment City': fields['Treatment City'],\n    Education: Education,\n    'Treatment Phone': fields['Treatment Phone'],\n    'Submission Date': fields['Submission Date'],\n    'Alt Destination Airport': fields['Alt Destination Airport'],\n    'Primary Treatment Doctor': fields['Primary Treatment Doctor'],\n    'Wheelchair?': fields['Wheelchair?'],\n    'Flight Specialist': fields['Flight Specialist'],\n    'Appt Date': fields['Appt Date'],\n    'Passenger 3 Approval Status': fields['Passenger 3 Approval Status'],\n    'First Request': fields['First Request'],\n    'Type of Treatment': fields['Type of Treatment'],\n    'Passenger 3 Reason': fields['Passenger 3 Reason'],\n    'Flight Legs': fields['Flight Legs'],\n    Status: Status,\n    'Oxygen?': fields['Oxygen?'],\n    'Origin Airport': fields['Origin Airport'],\n    'Treatment Fax': fields['Treatment Fax'],\n    'Passenger 3 Different Return': fields['Passenger 3 Different Return'],\n    Patient: Patient,\n    'Passenger 2': fields['Passenger 2'],\n    'Return Date': fields['Return Date'],\n    'Treatment Site': fields['Treatment Site'],\n    'Treatment State': fields['Treatment State'],\n    'Passenger 3 Return Date': fields['Passenger 3 Return Date'],\n    'Patient Age': fields['Patient Age'],\n    'Passenger 2 Different Return': fields['Passenger 2 Different Return'],\n    'Destination Airport': fields['Destination Airport'],\n    'Alt. Origin Airport': fields['Alt. Origin Airport'],\n    'AirTable Record ID': fields['AirTable Record ID'],\n    'Patient AirTable Record ID': fields['Patient AirTable Record ID'],\n    'Passenger 2 AirTable Record ID': fields['Passenger 2 AirTable Record ID'],\n    'Passenger 3 AirTable Record ID': fields['Passenger 3 AirTable Record ID'],\n    'Passenger AirTable Record IDs': fields['Passenger AirTable Record IDs'],\n    'Existing Diagnoses': fields['Existing Diagnoses'],\n    'Total Nautical Miles': fields['Total Nautical Miles'],\n    '# of Legs': fields['# of Legs'],\n    'Total # of Legs': fields['Total # of Legs'],\n    'Request ID': fields['Request ID'],\n  };\n\n  return trimmedRequest;\n};\n\nexport const trimFlightLeg = (request: FlightLegData): TrimmedFlightLeg => {\n  const { id, createdTime, fields } = request;\n\n  const { Status, Airline, Passengers } = fields;\n\n  const trimmedLeg: TrimmedFlightLeg = {\n    id: id,\n    createdTime: createdTime,\n    Status: Status,\n    Airline: Airline,\n    'Departure Date/Time': fields['Departure Date/Time'],\n    'Arrival Date/Time': fields['Arrival Date/Time'],\n    'Nautical Miles': fields['Nautical Miles'],\n    Passengers: Passengers,\n    'Departure Airport': fields['Departure Airport'],\n    'Arrival Airport': fields['Arrival Airport'],\n    'Leg ID': fields['Leg ID'],\n    'Leg Type': fields['Leg Type'],\n    'Total Miles': fields['Total Miles'],\n    'Passenger Names': fields['Passenger Names'],\n    'Total Cost': fields['Total Cost'],\n    'AirTable Record ID': fields['AirTable Record ID'],\n    'Request AirTable Record ID': fields['Request AirTable Record ID'],\n    'Passenger AirTable Record IDs': fields['Passenger AirTable Record IDs'],\n    'Log Airline Credit': {\n      label: fields['Log Airline Credit'].label,\n      url: fields['Log Airline Credit'].url,\n    },\n    'Patient Name': fields['Patient Name'],\n    'Patient Latest Trip': fields['Patient Latest Trip'],\n    'Is Latest Trip': fields['Is Latest Trip'],\n  };\n\n  return trimmedLeg;\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f6431b0a7ad8ddc2981635de229a0bf872c3a87e","contentHash":"37098745860f5497f2985ccded594b6ad9e0350ed5623bb07eb464cfe83d871f"},"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/controllers/FlightRequest.controller.ts":{"path":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/controllers/FlightRequest.controller.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":136}},"14":{"start":{"line":13,"column":20},"end":{"line":13,"column":48}},"15":{"start":{"line":28,"column":36},"end":{"line":35,"column":2}},"16":{"start":{"line":28,"column":50},"end":{"line":35,"column":2}},"17":{"start":{"line":32,"column":27},"end":{"line":32,"column":103}},"18":{"start":{"line":32,"column":60},"end":{"line":32,"column":102}},"19":{"start":{"line":34,"column":4},"end":{"line":34,"column":41}},"20":{"start":{"line":36,"column":0},"end":{"line":36,"column":66}},"21":{"start":{"line":50,"column":29},"end":{"line":57,"column":2}},"22":{"start":{"line":50,"column":43},"end":{"line":57,"column":2}},"23":{"start":{"line":54,"column":26},"end":{"line":54,"column":68}},"24":{"start":{"line":56,"column":4},"end":{"line":56,"column":40}},"25":{"start":{"line":58,"column":0},"end":{"line":58,"column":52}},"26":{"start":{"line":70,"column":28},"end":{"line":79,"column":2}},"27":{"start":{"line":70,"column":42},"end":{"line":79,"column":2}},"28":{"start":{"line":76,"column":26},"end":{"line":76,"column":68}},"29":{"start":{"line":78,"column":4},"end":{"line":78,"column":40}},"30":{"start":{"line":80,"column":0},"end":{"line":80,"column":50}},"31":{"start":{"line":93,"column":28},"end":{"line":102,"column":2}},"32":{"start":{"line":93,"column":42},"end":{"line":102,"column":2}},"33":{"start":{"line":99,"column":26},"end":{"line":99,"column":68}},"34":{"start":{"line":101,"column":4},"end":{"line":101,"column":40}},"35":{"start":{"line":103,"column":0},"end":{"line":103,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":28,"column":36},"end":{"line":28,"column":37}},"loc":{"start":{"line":28,"column":50},"end":{"line":35,"column":2}},"line":28},"8":{"name":"(anonymous_8)","decl":{"start":{"line":28,"column":84},"end":{"line":28,"column":85}},"loc":{"start":{"line":28,"column":97},"end":{"line":35,"column":1}},"line":28},"9":{"name":"(anonymous_9)","decl":{"start":{"line":32,"column":54},"end":{"line":32,"column":55}},"loc":{"start":{"line":32,"column":60},"end":{"line":32,"column":102}},"line":32},"10":{"name":"(anonymous_10)","decl":{"start":{"line":50,"column":29},"end":{"line":50,"column":30}},"loc":{"start":{"line":50,"column":43},"end":{"line":57,"column":2}},"line":50},"11":{"name":"(anonymous_11)","decl":{"start":{"line":50,"column":77},"end":{"line":50,"column":78}},"loc":{"start":{"line":50,"column":90},"end":{"line":57,"column":1}},"line":50},"12":{"name":"(anonymous_12)","decl":{"start":{"line":70,"column":28},"end":{"line":70,"column":29}},"loc":{"start":{"line":70,"column":42},"end":{"line":79,"column":2}},"line":70},"13":{"name":"(anonymous_13)","decl":{"start":{"line":70,"column":76},"end":{"line":70,"column":77}},"loc":{"start":{"line":70,"column":89},"end":{"line":79,"column":1}},"line":70},"14":{"name":"(anonymous_14)","decl":{"start":{"line":93,"column":28},"end":{"line":93,"column":29}},"loc":{"start":{"line":93,"column":42},"end":{"line":102,"column":2}},"line":93},"15":{"name":"(anonymous_15)","decl":{"start":{"line":93,"column":76},"end":{"line":93,"column":77}},"loc":{"start":{"line":93,"column":89},"end":{"line":102,"column":1}},"line":93}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":1,"21":1,"22":0,"23":0,"24":0,"25":1,"26":1,"27":0,"28":0,"29":0,"30":1,"31":1,"32":0,"33":0,"34":0,"35":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"0":[1,1,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/controllers/FlightRequest.controller.ts","sources":["/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/controllers/FlightRequest.controller.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,iDAA4D;AAG5D;;;;;;;;;;;;;GAaG;AACI,MAAM,2BAA2B,GAAG,CACzC,GAAY,EACZ,GAAa,EACb,EAAE;IACF,2CAA2C;IAC3C,gCAAgC;IAEhC,yCAAyC;IACzC,MAAM,cAAc,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CACrD,IAAA,mCAAuB,GAAE,CAC1B,CAAC;IAEF,0CAA0C;IAC1C,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AACvC,CAAC,CAAA,CAAC;AAdW,QAAA,2BAA2B,+BActC;AAEF;;;;;;;;;;;;GAYG;AACI,MAAM,oBAAoB,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IACxE,oDAAoD;IACpD,yCAAyC;IAEzC,+BAA+B;IAC/B,MAAM,aAAa,GAAG,IAAA,mCAAuB,GAAE,CAAC;IAEhD,4BAA4B;IAC5B,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AACtC,CAAC,CAAA,CAAC;AATW,QAAA,oBAAoB,wBAS/B;AAEF;;;;;;;;;;GAUG;AACI,MAAM,mBAAmB,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IACvE,oDAAoD;IACpD,yBAAyB;IAEzB,uCAAuC;IACvC,MAAM;IAEN,+BAA+B;IAC/B,MAAM,aAAa,GAAG,IAAA,mCAAuB,GAAE,CAAC;IAEhD,4BAA4B;IAC5B,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AACtC,CAAC,CAAA,CAAC;AAZW,QAAA,mBAAmB,uBAY9B;AAEF;;;;;;;;;;;GAWG;AACI,MAAM,mBAAmB,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IACvE,mDAAmD;IACnD,0CAA0C;IAE1C,uCAAuC;IACvC,MAAM;IAEN,kDAAkD;IAClD,MAAM,aAAa,GAAG,IAAA,mCAAuB,GAAE,CAAC;IAEhD,4BAA4B;IAC5B,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AACtC,CAAC,CAAA,CAAC;AAZW,QAAA,mBAAmB,uBAY9B","sourcesContent":["import { createTestFlightLegData } from '../data/test-data';\nimport type { Request, Response } from 'express';\n\n/**\n * This function returns all flight requests for a given user\n *\n * Steps to complete:\n * 1. Get the userId from the query parameters, if it doesn't exist return a 400\n * 2. Make a call to AirTable to get all flight requests for the user, if that fails return a 500 (hint, use try/catch)\n *    If there are no flight requests for the user return a 400. (hint: use the AirTable API, see TestControllers/retrievePassengers.ts for an example)\n *    Another hint - we will be filtering by the \"Passenger ID\" field in the AirTable\n * 3. Remove any unnecessary data from the flight requests (there is a lot of data in the AirTable response we don't need)\n * 4. Return the flight requests for the user\n *\n * @param req - the request object\n * @param res - the response object\n */\nexport const getAllFlightRequestsForUser = async (\n  req: Request,\n  res: Response\n) => {\n  // get the userId from the query parameters\n  // const { userId } = req.query;\n\n  // create a fake array of flight requests\n  const flightRequests = Array.from({ length: 10 }, () =>\n    createTestFlightLegData()\n  );\n\n  // return the flight requests for the user\n  res.status(200).send(flightRequests);\n};\n\n/**\n * This function returns a flight request for a given flightRequestId\n *\n * Steps to complete:\n * 1. Get the flightRequestId from the query parameters, if it doesn't exist return a 400\n * 2. Make a call to AirTable to get the flight request, if that fails return a 500 (hint, use try/catch)\n *   If there is no flight request for the flightRequestId return a 400. (hint: use the AirTable API, see TestControllers/retrievePassengers.ts for an example)\n * 3. Remove any unnecessary data from the flight requests (there is a lot of data in the AirTable response we don't need)\n * 4. Return the flight request\n *\n * @param req - the request object\n * @param res - the response object\n */\nexport const getFlightRequestById = async (req: Request, res: Response) => {\n  // get the flightRequestId from the query parameters\n  // const { flightRequestId } = req.query;\n\n  // create a fake flight request\n  const flightRequest = createTestFlightLegData();\n\n  // return the flight request\n  res.status(200).send(flightRequest);\n};\n\n/**\n * This function creates a flight request for a given user\n *\n * Steps to complete:\n * 1. Use Joi to validate the request body, if it doesn't exist or is invalid return a 400\n * 2. Create a fake flight request by making a call to JotForm. If that fails return a 500 (hint, use try/catch)\n * 3. Return the flight request that was created\n *\n * @param req - the request object\n * @param res - the response object\n */\nexport const createFlightRequest = async (req: Request, res: Response) => {\n  // get the flight request data from the request body\n  // const data = req.body;\n\n  // use Joi to validate the request body\n  // ...\n\n  // create a fake flight request\n  const flightRequest = createTestFlightLegData();\n\n  // return the flight request\n  res.status(200).send(flightRequest);\n};\n\n/**\n * This function updates a flight request for a given flightRequestId\n *\n * Steps to complete:\n * 1. Get the flightRequestId from the path parameters, if it doesn't exist return a 400\n * 2. Use Joi to validate the request body, if it doesn't exist or is invalid return a 400\n * 3. Update the flight request by making a call to AirTable. If that fails return a 500 (hint, use try/catch)\n * 4. Return the entire flight request that was updated, once again removing any unnecessary data\n *\n * @param req - the request object\n * @param res - the response object\n */\nexport const updateFlightRequest = async (req: Request, res: Response) => {\n  // get the flightRequestId from the path parameters\n  // const { flightRequestId } = req.params;\n\n  // use Joi to validate the request body\n  // ...\n\n  // create a fake flight request that was \"updated\"\n  const flightRequest = createTestFlightLegData();\n\n  // return the flight request\n  res.status(200).send(flightRequest);\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"22bef5f55b4120186cb89aa116db89c7ff6cfa4c","contentHash":"703dd43b7c15953d31bbb61fec240210643cbee6347c1558eee93c2dbb62cb3a"},"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/controllers/TestControllers/queryParameterExample.ts":{"path":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/controllers/TestControllers/queryParameterExample.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":39}},"14":{"start":{"line":13,"column":30},"end":{"line":22,"column":2}},"15":{"start":{"line":13,"column":44},"end":{"line":22,"column":2}},"16":{"start":{"line":14,"column":21},"end":{"line":14,"column":30}},"17":{"start":{"line":15,"column":4},"end":{"line":16,"column":56}},"18":{"start":{"line":16,"column":8},"end":{"line":16,"column":56}},"19":{"start":{"line":17,"column":4},"end":{"line":21,"column":45}},"20":{"start":{"line":23,"column":0},"end":{"line":23,"column":54}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":13,"column":30},"end":{"line":13,"column":31}},"loc":{"start":{"line":13,"column":44},"end":{"line":22,"column":2}},"line":13},"8":{"name":"(anonymous_8)","decl":{"start":{"line":13,"column":78},"end":{"line":13,"column":79}},"loc":{"start":{"line":13,"column":91},"end":{"line":22,"column":1}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":15,"column":4},"end":{"line":16,"column":56}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":16,"column":56}},{"start":{"line":15,"column":4},"end":{"line":16,"column":56}}],"line":15}},"s":{"0":1,"1":0,"2":0,"3":2,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":2,"11":2,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":1,"19":1,"20":1},"f":{"0":2,"1":0,"2":0,"3":2,"4":0,"5":0,"6":2,"7":2,"8":2},"b":{"0":[1,1,1],"1":[0,0],"2":[2,2],"3":[2,0],"4":[2,2],"5":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/controllers/TestControllers/queryParameterExample.ts","sources":["/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/controllers/TestControllers/queryParameterExample.ts"],"names":[],"mappings":";;;;;;;;;;;;AAEO,MAAM,qBAAqB,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IACzE,MAAM,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC;IAC3B,IAAI,CAAC,IAAI;QAAE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAE3D,GAAG;SACA,MAAM,CAAC,GAAG,CAAC;SACX,IAAI,CACH,sDAAsD;QACpD,GAAG,CAAC,KAAK,CAAC,IAAI;QACd,mCAAmC,CACtC,CAAC;AACN,CAAC,CAAA,CAAC;AAXW,QAAA,qBAAqB,yBAWhC","sourcesContent":["import type { Request, Response } from 'express';\n\nexport const queryParameterExample = async (req: Request, res: Response) => {\n  const { name } = req.query;\n  if (!name) return res.status(400).send('Name is required');\n\n  res\n    .status(418)\n    .send(\n      'I cant make coffee! Thanks for your request though, ' +\n        req.query.name +\n        '. Great use of a query parameter!'\n    );\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fa9d97112a7e906e7de8c4da3f5200a46e02c6a9","contentHash":"21f1ded4e2c0d676d3809f08f29ae0de69d2cdc84595181e271e8b8fe8b3e3aa"},"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/controllers/TestControllers/pathParameterExample.ts":{"path":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/controllers/TestControllers/pathParameterExample.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":38}},"14":{"start":{"line":13,"column":29},"end":{"line":22,"column":2}},"15":{"start":{"line":13,"column":43},"end":{"line":22,"column":2}},"16":{"start":{"line":14,"column":22},"end":{"line":14,"column":32}},"17":{"start":{"line":15,"column":4},"end":{"line":16,"column":56}},"18":{"start":{"line":16,"column":8},"end":{"line":16,"column":56}},"19":{"start":{"line":17,"column":4},"end":{"line":21,"column":44}},"20":{"start":{"line":23,"column":0},"end":{"line":23,"column":52}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":13,"column":29},"end":{"line":13,"column":30}},"loc":{"start":{"line":13,"column":43},"end":{"line":22,"column":2}},"line":13},"8":{"name":"(anonymous_8)","decl":{"start":{"line":13,"column":77},"end":{"line":13,"column":78}},"loc":{"start":{"line":13,"column":90},"end":{"line":22,"column":1}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":15,"column":4},"end":{"line":16,"column":56}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":16,"column":56}},{"start":{"line":15,"column":4},"end":{"line":16,"column":56}}],"line":15}},"s":{"0":1,"1":0,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":0,"19":1,"20":1},"f":{"0":1,"1":0,"2":0,"3":1,"4":0,"5":0,"6":1,"7":1,"8":1},"b":{"0":[1,1,1],"1":[0,0],"2":[1,1],"3":[1,0],"4":[1,1],"5":[0,1]},"inputSourceMap":{"version":3,"file":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/controllers/TestControllers/pathParameterExample.ts","sources":["/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/controllers/TestControllers/pathParameterExample.ts"],"names":[],"mappings":";;;;;;;;;;;;AAEO,MAAM,oBAAoB,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IACxE,MAAM,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;IAE7B,IAAI,CAAC,KAAK;QAAE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAE5D,GAAG;SACA,MAAM,CAAC,GAAG,CAAC;SACX,IAAI,CACH,sDAAsD;QACpD,KAAK;QACL,kCAAkC,CACrC,CAAC;AACN,CAAC,CAAA,CAAC;AAZW,QAAA,oBAAoB,wBAY/B","sourcesContent":["import type { Request, Response } from 'express';\n\nexport const pathParameterExample = async (req: Request, res: Response) => {\n  const { value } = req.params;\n\n  if (!value) return res.status(400).send('Name is required');\n\n  res\n    .status(418)\n    .send(\n      'I cant make coffee! Thanks for your request though, ' +\n        value +\n        '. Great use of a path parameter!'\n    );\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"44bb5229baf91236b7be0b534e5e632bccb48a20","contentHash":"3e35d5d7b0df39314d9e0d762d9f2d90b18b94ee1b918eab571c5b30099a6c38"},"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/controllers/TestControllers/bodyParameterExample.ts":{"path":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/controllers/TestControllers/bodyParameterExample.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":38}},"14":{"start":{"line":13,"column":29},"end":{"line":22,"column":2}},"15":{"start":{"line":13,"column":43},"end":{"line":22,"column":2}},"16":{"start":{"line":14,"column":21},"end":{"line":14,"column":29}},"17":{"start":{"line":15,"column":4},"end":{"line":16,"column":56}},"18":{"start":{"line":16,"column":8},"end":{"line":16,"column":56}},"19":{"start":{"line":17,"column":4},"end":{"line":21,"column":45}},"20":{"start":{"line":23,"column":0},"end":{"line":23,"column":52}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":13,"column":29},"end":{"line":13,"column":30}},"loc":{"start":{"line":13,"column":43},"end":{"line":22,"column":2}},"line":13},"8":{"name":"(anonymous_8)","decl":{"start":{"line":13,"column":77},"end":{"line":13,"column":78}},"loc":{"start":{"line":13,"column":90},"end":{"line":22,"column":1}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":15,"column":4},"end":{"line":16,"column":56}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":16,"column":56}},{"start":{"line":15,"column":4},"end":{"line":16,"column":56}}],"line":15}},"s":{"0":1,"1":0,"2":0,"3":2,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":2,"11":2,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":1,"19":1,"20":1},"f":{"0":2,"1":0,"2":0,"3":2,"4":0,"5":0,"6":2,"7":2,"8":2},"b":{"0":[1,1,1],"1":[0,0],"2":[2,2],"3":[2,0],"4":[2,2],"5":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/controllers/TestControllers/bodyParameterExample.ts","sources":["/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/controllers/TestControllers/bodyParameterExample.ts"],"names":[],"mappings":";;;;;;;;;;;;AAEO,MAAM,oBAAoB,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IACxE,MAAM,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;IAE1B,IAAI,CAAC,IAAI;QAAE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAE3D,GAAG;SACA,MAAM,CAAC,GAAG,CAAC;SACX,IAAI,CACH,sDAAsD;QACpD,IAAI;QACJ,CAAC,kCAAkC,CACtC,CAAC;AACN,CAAC,CAAA,CAAC;AAZW,QAAA,oBAAoB,wBAY/B","sourcesContent":["import type { Request, Response } from 'express';\n\nexport const bodyParameterExample = async (req: Request, res: Response) => {\n  const { name } = req.body;\n\n  if (!name) return res.status(400).send('Name is required');\n\n  res\n    .status(418)\n    .send(\n      'I cant make coffee! Thanks for your request though, ' +\n        name +\n        +'. Great use of a body parameter!'\n    );\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4c07ada46bf4599fbdf9c47b48518346bedf1bc1","contentHash":"be6c18c11a1ef26d988366a4ab03b98053602e3538986142a75d7ca783d2b0a3"},"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/controllers/TestControllers/retrievePassengers.ts":{"path":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/controllers/TestControllers/retrievePassengers.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"16":{"start":{"line":16,"column":17},"end":{"line":16,"column":62}},"17":{"start":{"line":17,"column":19},"end":{"line":17,"column":55}},"18":{"start":{"line":18,"column":17},"end":{"line":18,"column":51}},"19":{"start":{"line":19,"column":0},"end":{"line":19,"column":26}},"20":{"start":{"line":22,"column":27},"end":{"line":65,"column":2}},"21":{"start":{"line":22,"column":41},"end":{"line":65,"column":2}},"22":{"start":{"line":23,"column":17},"end":{"line":25,"column":32}},"23":{"start":{"line":26,"column":4},"end":{"line":64,"column":7}},"24":{"start":{"line":33,"column":8},"end":{"line":63,"column":11}},"25":{"start":{"line":34,"column":12},"end":{"line":37,"column":13}},"26":{"start":{"line":35,"column":16},"end":{"line":35,"column":44}},"27":{"start":{"line":36,"column":16},"end":{"line":36,"column":23}},"28":{"start":{"line":38,"column":12},"end":{"line":62,"column":13}},"29":{"start":{"line":39,"column":35},"end":{"line":41,"column":25}},"30":{"start":{"line":39,"column":57},"end":{"line":41,"column":24}},"31":{"start":{"line":42,"column":16},"end":{"line":42,"column":78}},"32":{"start":{"line":43,"column":16},"end":{"line":61,"column":17}},"33":{"start":{"line":44,"column":34},"end":{"line":44,"column":36}},"34":{"start":{"line":45,"column":37},"end":{"line":53,"column":23}},"35":{"start":{"line":45,"column":62},"end":{"line":53,"column":22}},"36":{"start":{"line":46,"column":50},"end":{"line":46,"column":52}},"37":{"start":{"line":47,"column":45},"end":{"line":50,"column":27}},"38":{"start":{"line":47,"column":71},"end":{"line":50,"column":26}},"39":{"start":{"line":48,"column":52},"end":{"line":48,"column":172}},"40":{"start":{"line":49,"column":28},"end":{"line":49,"column":68}},"41":{"start":{"line":51,"column":24},"end":{"line":51,"column":56}},"42":{"start":{"line":52,"column":24},"end":{"line":52,"column":54}},"43":{"start":{"line":54,"column":20},"end":{"line":54,"column":48}},"44":{"start":{"line":55,"column":20},"end":{"line":55,"column":83}},"45":{"start":{"line":57,"column":20},"end":{"line":57,"column":48}},"46":{"start":{"line":60,"column":20},"end":{"line":60,"column":39}},"47":{"start":{"line":66,"column":0},"end":{"line":66,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":22,"column":27},"end":{"line":22,"column":28}},"loc":{"start":{"line":22,"column":41},"end":{"line":65,"column":2}},"line":22},"9":{"name":"(anonymous_9)","decl":{"start":{"line":22,"column":75},"end":{"line":22,"column":76}},"loc":{"start":{"line":22,"column":88},"end":{"line":65,"column":1}},"line":22},"10":{"name":"(anonymous_10)","decl":{"start":{"line":32,"column":19},"end":{"line":32,"column":20}},"loc":{"start":{"line":32,"column":43},"end":{"line":64,"column":5}},"line":32},"11":{"name":"(anonymous_11)","decl":{"start":{"line":33,"column":47},"end":{"line":33,"column":48}},"loc":{"start":{"line":33,"column":60},"end":{"line":63,"column":9}},"line":33},"12":{"name":"(anonymous_12)","decl":{"start":{"line":39,"column":47},"end":{"line":39,"column":48}},"loc":{"start":{"line":39,"column":57},"end":{"line":41,"column":24}},"line":39},"13":{"name":"(anonymous_13)","decl":{"start":{"line":45,"column":52},"end":{"line":45,"column":53}},"loc":{"start":{"line":45,"column":62},"end":{"line":53,"column":22}},"line":45},"14":{"name":"(anonymous_14)","decl":{"start":{"line":45,"column":94},"end":{"line":45,"column":95}},"loc":{"start":{"line":45,"column":107},"end":{"line":53,"column":21}},"line":45},"15":{"name":"(anonymous_15)","decl":{"start":{"line":47,"column":54},"end":{"line":47,"column":55}},"loc":{"start":{"line":47,"column":71},"end":{"line":50,"column":26}},"line":47},"16":{"name":"(anonymous_16)","decl":{"start":{"line":47,"column":103},"end":{"line":47,"column":104}},"loc":{"start":{"line":47,"column":116},"end":{"line":50,"column":25}},"line":47}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":24,"column":16},"end":{"line":24,"column":50}},"type":"binary-expr","locations":[{"start":{"line":24,"column":16},"end":{"line":24,"column":44}},{"start":{"line":24,"column":48},"end":{"line":24,"column":50}}],"line":24},"9":{"loc":{"start":{"line":34,"column":12},"end":{"line":37,"column":13}},"type":"if","locations":[{"start":{"line":34,"column":12},"end":{"line":37,"column":13}},{"start":{"line":34,"column":12},"end":{"line":37,"column":13}}],"line":34},"10":{"loc":{"start":{"line":38,"column":12},"end":{"line":62,"column":13}},"type":"if","locations":[{"start":{"line":38,"column":12},"end":{"line":62,"column":13}},{"start":{"line":38,"column":12},"end":{"line":62,"column":13}}],"line":38},"11":{"loc":{"start":{"line":39,"column":57},"end":{"line":41,"column":24}},"type":"cond-expr","locations":[{"start":{"line":40,"column":22},"end":{"line":40,"column":50}},{"start":{"line":41,"column":22},"end":{"line":41,"column":24}}],"line":39},"12":{"loc":{"start":{"line":48,"column":83},"end":{"line":48,"column":171}},"type":"binary-expr","locations":[{"start":{"line":48,"column":84},"end":{"line":48,"column":164}},{"start":{"line":48,"column":169},"end":{"line":48,"column":171}}],"line":48},"13":{"loc":{"start":{"line":48,"column":84},"end":{"line":48,"column":164}},"type":"cond-expr","locations":[{"start":{"line":48,"column":133},"end":{"line":48,"column":139}},{"start":{"line":48,"column":142},"end":{"line":48,"column":164}}],"line":48},"14":{"loc":{"start":{"line":48,"column":84},"end":{"line":48,"column":130}},"type":"binary-expr","locations":[{"start":{"line":48,"column":84},"end":{"line":48,"column":104}},{"start":{"line":48,"column":108},"end":{"line":48,"column":130}}],"line":48}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":3,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":3,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"0":[1,1,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[1,1,1],"6":[1,2],"7":[3,3],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/controllers/TestControllers/retrievePassengers.ts","sources":["/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/controllers/TestControllers/retrievePassengers.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,+DAAuC;AACvC,wDAAgC;AAChC,oDAA4B;AAG5B,gBAAM,CAAC,MAAM,EAAE,CAAC;AAEhB,+FAA+F;AAC/F,6DAA6D;AACtD,MAAM,kBAAkB,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IACtE,MAAM,IAAI,GAAG,IAAI,kBAAQ,CAAC;QACxB,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,gBAAgB,IAAI,EAAE;KAC3C,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAE7B,IAAI,CAAC,yBAAyB,CAAC;SAC5B,MAAM,CAAC;QACN,0DAA0D;QAC1D,UAAU,EAAE,GAAG;QACf,IAAI,EAAE,uBAAuB;KAC9B,CAAC;SACD,SAAS,CAAC,UAAgB,GAAG,EAAE,OAAO;;YACrC,IAAI,GAAG,EAAE;gBACP,gBAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAClB,OAAO;aACR;YACD,IAAI,OAAO,EAAE;gBACX,MAAM,UAAU,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CACtC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,SAAS;oBACxC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC;oBAC9B,CAAC,CAAC,EAAE,CACO,CAAC;gBAChB,gBAAM,CAAC,IAAI,CAAC,0BAA0B,EAAE,UAAU,CAAC,CAAC;gBAEpD,IAAI;oBACF,MAAM,KAAK,GAAG,EAA0B,CAAC;oBACzC,MAAM,QAAQ,GAAG,UAAU,CAAC,GAAG,CAAC,CAAM,IAAI,EAAC,EAAE;wBAC3C,MAAM,iBAAiB,GAAG,EAAwB,CAAC;wBACnD,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,CAAM,WAAW,EAAC,EAAE;4BAChD,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CACpD,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,QAAQ,EAAE,KAAI,EAAE,CAC9B,CAAC,CAAC,sCAAsC;4BACzC,iBAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;wBAC1C,CAAC,CAAA,CAAC,CAAC;wBACH,MAAM,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;wBAChC,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;oBAChC,CAAC,CAAA,CAAC,CAAC;oBAEH,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBAE5B,gBAAM,CAAC,IAAI,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;oBAErD,6CAA6C;oBAC7C,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBAC7B;gBAAC,OAAO,GAAG,EAAE;oBACZ,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBACpB;aACF;QACH,CAAC;KAAA,CAAC,CAAC;AACP,CAAC,CAAA,CAAC;AAjDW,QAAA,kBAAkB,sBAiD7B","sourcesContent":["import logger from '../../util/logger';\nimport Airtable from 'airtable';\nimport dotenv from 'dotenv';\nimport type { FieldSet, Record } from 'airtable';\nimport type { Request, Response } from 'express';\ndotenv.config();\n\n// Example endpoint that uses the AirTable API to retrieve all the passengers in the example db\n// THIS IS A TEST ENDPOINT AND IT IS STILL A WORK IN PROGRESS\nexport const retrievePassengers = async (req: Request, res: Response) => {\n  const base = new Airtable({\n    apiKey: process.env.AIRTABLE_API_KEY || '',\n  }).base('appwPsfAb6U8CV3mf');\n\n  base('Flight Requests (Trips)')\n    .select({\n      // Selecting the first 3 records in All Requests [MASTER]:\n      maxRecords: 100,\n      view: 'All Requests [MASTER]',\n    })\n    .firstPage(async function (err, records) {\n      if (err) {\n        logger.error(err);\n        return;\n      }\n      if (records) {\n        const flightLegs = records.map(record =>\n          record.fields['Flight Legs'] !== undefined\n            ? record.fields['Flight Legs']\n            : []\n        ) as string[][];\n        logger.info('Retrieved Flight Leg IDs', flightLegs);\n\n        try {\n          const trips = [] as Record<FieldSet>[][];\n          const promises = flightLegs.map(async trip => {\n            const flightLegsForTrip = [] as Record<FieldSet>[];\n            const tripPromises = trip.map(async flightLegId => {\n              const flightLegRecord = await base('Flight Legs').find(\n                flightLegId?.toString() || ''\n              ); // Replace with your actual table name\n              flightLegsForTrip.push(flightLegRecord);\n            });\n            await Promise.all(tripPromises);\n            trips.push(flightLegsForTrip);\n          });\n\n          await Promise.all(promises);\n\n          logger.info('Retrieved trips of flight legs', trips);\n\n          // Send the response or do further processing\n          res.status(200).send(trips);\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    });\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"704847dd1fb80561ded71a24e0ffa720d243ff9e","contentHash":"d7197c8591a96bc833de056edd9bbfe797773d6fd408375006b15289be5ac462"},"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/controllers/User.controller.ts":{"path":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/controllers/User.controller.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":28}},"16":{"start":{"line":16,"column":15},"end":{"line":16,"column":38}},"17":{"start":{"line":17,"column":19},"end":{"line":17,"column":55}},"18":{"start":{"line":18,"column":14},"end":{"line":18,"column":45}},"19":{"start":{"line":32,"column":19},"end":{"line":63,"column":2}},"20":{"start":{"line":32,"column":33},"end":{"line":63,"column":2}},"21":{"start":{"line":34,"column":19},"end":{"line":38,"column":6}},"22":{"start":{"line":40,"column":22},"end":{"line":40,"column":47}},"23":{"start":{"line":42,"column":4},"end":{"line":45,"column":5}},"24":{"start":{"line":43,"column":8},"end":{"line":43,"column":55}},"25":{"start":{"line":44,"column":8},"end":{"line":44,"column":15}},"26":{"start":{"line":47,"column":28},"end":{"line":47,"column":111}},"27":{"start":{"line":48,"column":17},"end":{"line":50,"column":32}},"28":{"start":{"line":51,"column":22},"end":{"line":55,"column":14}},"29":{"start":{"line":56,"column":4},"end":{"line":59,"column":5}},"30":{"start":{"line":58,"column":8},"end":{"line":58,"column":59}},"31":{"start":{"line":60,"column":4},"end":{"line":62,"column":55}},"32":{"start":{"line":64,"column":0},"end":{"line":64,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":32,"column":19},"end":{"line":32,"column":20}},"loc":{"start":{"line":32,"column":33},"end":{"line":63,"column":2}},"line":32},"9":{"name":"(anonymous_9)","decl":{"start":{"line":32,"column":67},"end":{"line":32,"column":68}},"loc":{"start":{"line":32,"column":80},"end":{"line":63,"column":1}},"line":32}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":42,"column":4},"end":{"line":45,"column":5}},"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":45,"column":5}},{"start":{"line":42,"column":4},"end":{"line":45,"column":5}}],"line":42},"9":{"loc":{"start":{"line":49,"column":16},"end":{"line":49,"column":50}},"type":"binary-expr","locations":[{"start":{"line":49,"column":16},"end":{"line":49,"column":44}},{"start":{"line":49,"column":48},"end":{"line":49,"column":50}}],"line":49},"10":{"loc":{"start":{"line":56,"column":4},"end":{"line":59,"column":5}},"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":59,"column":5}},{"start":{"line":56,"column":4},"end":{"line":59,"column":5}}],"line":56}},"s":{"0":1,"1":2,"2":0,"3":2,"4":2,"5":2,"6":0,"7":0,"8":0,"9":0,"10":4,"11":2,"12":1,"13":2,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":2,"21":2,"22":2,"23":2,"24":0,"25":0,"26":2,"27":2,"28":2,"29":2,"30":1,"31":1,"32":1},"f":{"0":2,"1":2,"2":0,"3":2,"4":2,"5":0,"6":4,"7":2,"8":2,"9":2},"b":{"0":[1,1,1],"1":[2,0],"2":[2,2],"3":[2,2],"4":[2,2],"5":[1,1,1],"6":[0,2],"7":[2,2],"8":[0,2],"9":[2,0],"10":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/controllers/User.controller.ts","sources":["/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/controllers/User.controller.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,uCAA6C;AAC7C,wDAAgC;AAChC,8CAAsB;AAItB;;;;;;;;;;;;GAYG;AACI,MAAM,UAAU,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IAC9D,uFAAuF;IACvF,MAAM,MAAM,GAAG,aAAG,CAAC,MAAM,CAAC;QACxB,SAAS,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;QAClC,QAAQ,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;QACjC,SAAS,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;KACnC,CAAC,CAAC;IAEH,4BAA4B;IAC5B,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAE5C,sDAAsD;IACtD,IAAI,KAAK,EAAE;QACT,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QAC/C,OAAO;KACR;IAED,4FAA4F;IAC5F,MAAM,eAAe,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,KAAK,GAAG,CAAC,IAAI,CAAC,SAAS,MACjE,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CACjC,EAAE,CAAC;IAEH,MAAM,IAAI,GAAG,IAAI,kBAAQ,CAAC;QACxB,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,gBAAgB,IAAI,EAAE;KAC3C,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAE7B,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC;SACvC,MAAM,CAAC;QACN,eAAe,EAAE,qBAAqB,eAAe,GAAG;KACzD,CAAC;SACD,GAAG,EAAE,CAAC;IAET,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;QAC1B,uDAAuD;QACvD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;KACpD;IAED,OAAO,GAAG;SACP,MAAM,CAAC,GAAG,CAAC;SACX,IAAI,CAAC,IAAA,oBAAa,EAAC,SAAS,CAAC,CAAC,CAA6B,CAAC,CAAC,CAAC;AACnE,CAAC,CAAA,CAAC;AAxCW,QAAA,UAAU,cAwCrB","sourcesContent":["import { trimPassenger } from '../util/trim';\nimport Airtable from 'airtable';\nimport Joi from 'joi';\nimport type { Request, Response } from 'express';\nimport type { PassengerData } from '../interfaces/passenger/passenger.interface';\n\n/**\n * This function returns all passengers connected to a user\n *\n * Steps to complete:\n * 1. Get the first name, last name, and birthdate from the request body, if it doesn't exist return a 400\n * 2. Make a call to AirTable to check if the user exists, if that fails return a 500 (hint, use try/catch)\n *    Another hint - we will be filtering by the \"Passenger ID\" field in the AirTable\n * 3. Remove any unnecessary data from the passenger (there is a lot of data in the AirTable response we don't need)\n * 4. Return the passengers for the user\n *\n * @param req - the request object\n * @param res - the response object\n */\nexport const createUser = async (req: Request, res: Response) => {\n  // given a first name, last name, and birthdate, check if a user exists in the database\n  const schema = Joi.object({\n    firstName: Joi.string().required(),\n    lastName: Joi.string().required(),\n    birthdate: Joi.string().required(),\n  });\n\n  // validate the request body\n  const { error } = schema.validate(req.body);\n\n  // if the request body is invalid, send a 400 response\n  if (error) {\n    res.status(400).send(error.details[0].message);\n    return;\n  }\n\n  // Format it like this: Cardenas, Jessica | 1989-11-10, birthday is a javascript date object\n  const formattedUserId = `${req.body.lastName}, ${req.body.firstName} | ${\n    req.body.birthdate.split('T')[0]\n  }`;\n\n  const base = new Airtable({\n    apiKey: process.env.AIRTABLE_API_KEY || '',\n  }).base('appwPsfAb6U8CV3mf');\n\n  const passenger = await base('Passengers')\n    .select({\n      filterByFormula: `{Passenger ID} = \"${formattedUserId}\"`,\n    })\n    .all();\n\n  if (passenger.length === 0) {\n    // return a message saying that the user does not exist\n    return res.status(400).send('User does not exist');\n  }\n\n  return res\n    .status(200)\n    .send(trimPassenger(passenger[0] as unknown as PassengerData));\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1b2c9c923a3d1cb24ebc52ec693d0720fdb59c0a","contentHash":"8cfc8afd6aba6d8c7ebaa457afb099b156a32d41bb4dd7921b7438db3426c10f"},"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/tests/Passenger.tests.ts":{"path":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/tests/Passenger.tests.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"25":{"start":{"line":26,"column":4},"end":{"line":26,"column":62}},"26":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}},"27":{"start":{"line":29,"column":24},"end":{"line":29,"column":58}},"28":{"start":{"line":30,"column":20},"end":{"line":30,"column":57}},"29":{"start":{"line":31,"column":17},"end":{"line":31,"column":51}},"30":{"start":{"line":32,"column":15},"end":{"line":32,"column":44}},"31":{"start":{"line":33,"column":0},"end":{"line":33,"column":26}},"32":{"start":{"line":35,"column":0},"end":{"line":35,"column":40}},"33":{"start":{"line":36,"column":0},"end":{"line":36,"column":24}},"34":{"start":{"line":38,"column":12},"end":{"line":38,"column":50}},"35":{"start":{"line":41,"column":0},"end":{"line":45,"column":3}},"36":{"start":{"line":42,"column":4},"end":{"line":44,"column":7}},"37":{"start":{"line":43,"column":8},"end":{"line":43,"column":15}},"38":{"start":{"line":47,"column":0},"end":{"line":50,"column":3}},"39":{"start":{"line":48,"column":4},"end":{"line":48,"column":19}},"40":{"start":{"line":49,"column":4},"end":{"line":49,"column":11}},"41":{"start":{"line":54,"column":0},"end":{"line":98,"column":3}},"42":{"start":{"line":55,"column":4},"end":{"line":64,"column":7}},"43":{"start":{"line":56,"column":8},"end":{"line":63,"column":11}},"44":{"start":{"line":61,"column":12},"end":{"line":61,"column":56}},"45":{"start":{"line":62,"column":12},"end":{"line":62,"column":19}},"46":{"start":{"line":65,"column":4},"end":{"line":75,"column":7}},"47":{"start":{"line":66,"column":8},"end":{"line":74,"column":11}},"48":{"start":{"line":71,"column":12},"end":{"line":71,"column":75}},"49":{"start":{"line":72,"column":12},"end":{"line":72,"column":56}},"50":{"start":{"line":73,"column":12},"end":{"line":73,"column":19}},"51":{"start":{"line":76,"column":4},"end":{"line":86,"column":7}},"52":{"start":{"line":77,"column":8},"end":{"line":85,"column":11}},"53":{"start":{"line":82,"column":12},"end":{"line":82,"column":71}},"54":{"start":{"line":83,"column":12},"end":{"line":83,"column":56}},"55":{"start":{"line":84,"column":12},"end":{"line":84,"column":19}},"56":{"start":{"line":87,"column":4},"end":{"line":97,"column":7}},"57":{"start":{"line":88,"column":8},"end":{"line":96,"column":11}},"58":{"start":{"line":93,"column":12},"end":{"line":93,"column":79}},"59":{"start":{"line":94,"column":12},"end":{"line":94,"column":56}},"60":{"start":{"line":95,"column":12},"end":{"line":95,"column":19}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":56},"end":{"line":25,"column":57}},"loc":{"start":{"line":25,"column":71},"end":{"line":27,"column":1}},"line":25},"7":{"name":"(anonymous_7)","decl":{"start":{"line":41,"column":7},"end":{"line":41,"column":8}},"loc":{"start":{"line":41,"column":15},"end":{"line":45,"column":1}},"line":41},"8":{"name":"(anonymous_8)","decl":{"start":{"line":42,"column":30},"end":{"line":42,"column":31}},"loc":{"start":{"line":42,"column":36},"end":{"line":44,"column":5}},"line":42},"9":{"name":"(anonymous_9)","decl":{"start":{"line":47,"column":6},"end":{"line":47,"column":7}},"loc":{"start":{"line":47,"column":14},"end":{"line":50,"column":1}},"line":47},"10":{"name":"(anonymous_10)","decl":{"start":{"line":54,"column":27},"end":{"line":54,"column":28}},"loc":{"start":{"line":54,"column":33},"end":{"line":98,"column":1}},"line":54},"11":{"name":"(anonymous_11)","decl":{"start":{"line":55,"column":39},"end":{"line":55,"column":40}},"loc":{"start":{"line":55,"column":47},"end":{"line":64,"column":5}},"line":55},"12":{"name":"(anonymous_12)","decl":{"start":{"line":60,"column":17},"end":{"line":60,"column":18}},"loc":{"start":{"line":60,"column":31},"end":{"line":63,"column":9}},"line":60},"13":{"name":"(anonymous_13)","decl":{"start":{"line":65,"column":46},"end":{"line":65,"column":47}},"loc":{"start":{"line":65,"column":54},"end":{"line":75,"column":5}},"line":65},"14":{"name":"(anonymous_14)","decl":{"start":{"line":70,"column":17},"end":{"line":70,"column":18}},"loc":{"start":{"line":70,"column":31},"end":{"line":74,"column":9}},"line":70},"15":{"name":"(anonymous_15)","decl":{"start":{"line":76,"column":46},"end":{"line":76,"column":47}},"loc":{"start":{"line":76,"column":54},"end":{"line":86,"column":5}},"line":76},"16":{"name":"(anonymous_16)","decl":{"start":{"line":81,"column":17},"end":{"line":81,"column":18}},"loc":{"start":{"line":81,"column":31},"end":{"line":85,"column":9}},"line":81},"17":{"name":"(anonymous_17)","decl":{"start":{"line":87,"column":46},"end":{"line":87,"column":47}},"loc":{"start":{"line":87,"column":54},"end":{"line":97,"column":5}},"line":87},"18":{"name":"(anonymous_18)","decl":{"start":{"line":92,"column":17},"end":{"line":92,"column":18}},"loc":{"start":{"line":92,"column":31},"end":{"line":96,"column":9}},"line":92}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":27}},{"start":{"line":25,"column":31},"end":{"line":25,"column":51}},{"start":{"line":25,"column":56},"end":{"line":27,"column":1}}],"line":25},"17":{"loc":{"start":{"line":26,"column":11},"end":{"line":26,"column":61}},"type":"cond-expr","locations":[{"start":{"line":26,"column":37},"end":{"line":26,"column":40}},{"start":{"line":26,"column":43},"end":{"line":26,"column":61}}],"line":26},"18":{"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":33}},"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":15}},{"start":{"line":26,"column":19},"end":{"line":26,"column":33}}],"line":26}},"s":{"0":1,"1":11,"2":11,"3":11,"4":11,"5":11,"6":7,"7":11,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":11,"21":11,"22":1,"23":1,"24":1,"25":2,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1},"f":{"0":11,"1":7,"2":0,"3":1,"4":0,"5":1,"6":2,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1},"b":{"0":[1,1,1],"1":[1,0],"2":[11,0],"3":[11,0],"4":[11,11],"5":[0,11],"6":[11,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[11,0],"15":[11,11],"16":[1,1,1],"17":[0,2],"18":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/tests/Passenger.tests.ts","sources":["/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/tests/Passenger.tests.ts"],"names":[],"mappings":"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","sourcesContent":["import { configureServer } from '../config/server.config';\nimport chaiHttp from 'chai-http';\nimport dotenv from 'dotenv';\nimport chai, { expect } from 'chai';\nimport type { Server } from 'http';\ndotenv.config();\n\n// set up chai\nchai.use(chaiHttp);\nchai.should();\n\n// set up mock server\nconst app = configureServer();\nlet server: Server;\n\n// start mock server\nbefore(done => {\n  server = app.listen(3483, () => {\n    done();\n  });\n});\n\n// close mock server\nafter(done => {\n  server.close();\n  done();\n});\n\n// describe is group of tests\n// it is the actual test itself\n// Test case\ndescribe('GET /passenger', () => {\n  it('should return a 400 response', done => {\n    chai\n      .request(app)\n      .get('/passenger')\n      .query({ id: '' })\n      .end((err, res) => {\n        expect(res).to.have.status(400);\n        done();\n      });\n  });\n  it('should be an accompanying passenger', done => {\n    chai\n      .request(app)\n      .get('/passenger')\n      .query({ id: 'recleNlsBm3dheZHy' })\n      .end((err, res) => {\n        expect(res.body[0]['First Name']).to.equal('Bail');\n        expect(res).to.have.status(200);\n        done();\n      });\n  });\n  it('should be an accompanying passenger', done => {\n    chai\n      .request(app)\n      .get('/passenger')\n      .query({ id: 'recleNlsBm3dheZHy' })\n      .end((err, res) => {\n        expect(res.body[1]['Gender']).to.equal('Male');\n        expect(res).to.have.status(200);\n        done();\n      });\n  });\n  it('should be an accompanying passenger', done => {\n    chai\n      .request(app)\n      .get('/passenger')\n      .query({ id: 'recleNlsBm3dheZHy' })\n      .end((err, res) => {\n        expect(res.body[2]['Relationship']).to.equal('Father');\n        expect(res).to.have.status(200);\n        done();\n      });\n  });\n});\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9080c05f3f646f707df27032e99a37f14242bfcb","contentHash":"15b3068e6b8c399295b631cc73ef245e0087421f55c84da115f46b4748b41bda"},"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/tests/Trimming.tests.ts":{"path":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/tests/Trimming.tests.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":62}},"25":{"start":{"line":26,"column":20},"end":{"line":26,"column":48}},"26":{"start":{"line":27,"column":15},"end":{"line":27,"column":38}},"27":{"start":{"line":28,"column":15},"end":{"line":28,"column":44}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":24}},"29":{"start":{"line":30,"column":0},"end":{"line":142,"column":3}},"30":{"start":{"line":31,"column":4},"end":{"line":85,"column":7}},"31":{"start":{"line":32,"column":28},"end":{"line":32,"column":74}},"32":{"start":{"line":33,"column":31},"end":{"line":33,"column":67}},"33":{"start":{"line":34,"column":8},"end":{"line":34,"column":71}},"34":{"start":{"line":35,"column":8},"end":{"line":35,"column":89}},"35":{"start":{"line":36,"column":8},"end":{"line":36,"column":106}},"36":{"start":{"line":37,"column":8},"end":{"line":37,"column":98}},"37":{"start":{"line":38,"column":8},"end":{"line":38,"column":108}},"38":{"start":{"line":39,"column":8},"end":{"line":39,"column":104}},"39":{"start":{"line":40,"column":8},"end":{"line":40,"column":108}},"40":{"start":{"line":41,"column":8},"end":{"line":41,"column":134}},"41":{"start":{"line":42,"column":8},"end":{"line":42,"column":98}},"42":{"start":{"line":43,"column":8},"end":{"line":43,"column":102}},"43":{"start":{"line":44,"column":8},"end":{"line":44,"column":104}},"44":{"start":{"line":45,"column":8},"end":{"line":45,"column":92}},"45":{"start":{"line":46,"column":8},"end":{"line":46,"column":108}},"46":{"start":{"line":47,"column":8},"end":{"line":47,"column":92}},"47":{"start":{"line":48,"column":8},"end":{"line":48,"column":110}},"48":{"start":{"line":49,"column":8},"end":{"line":49,"column":110}},"49":{"start":{"line":50,"column":8},"end":{"line":50,"column":126}},"50":{"start":{"line":51,"column":8},"end":{"line":51,"column":128}},"51":{"start":{"line":52,"column":8},"end":{"line":52,"column":102}},"52":{"start":{"line":53,"column":8},"end":{"line":53,"column":114}},"53":{"start":{"line":54,"column":8},"end":{"line":54,"column":98}},"54":{"start":{"line":55,"column":8},"end":{"line":55,"column":134}},"55":{"start":{"line":56,"column":8},"end":{"line":56,"column":106}},"56":{"start":{"line":57,"column":8},"end":{"line":57,"column":114}},"57":{"start":{"line":58,"column":8},"end":{"line":58,"column":116}},"58":{"start":{"line":59,"column":8},"end":{"line":59,"column":102}},"59":{"start":{"line":60,"column":8},"end":{"line":60,"column":86}},"60":{"start":{"line":61,"column":8},"end":{"line":61,"column":94}},"61":{"start":{"line":62,"column":8},"end":{"line":62,"column":108}},"62":{"start":{"line":63,"column":8},"end":{"line":63,"column":106}},"63":{"start":{"line":64,"column":8},"end":{"line":64,"column":136}},"64":{"start":{"line":65,"column":8},"end":{"line":65,"column":88}},"65":{"start":{"line":66,"column":8},"end":{"line":66,"column":102}},"66":{"start":{"line":67,"column":8},"end":{"line":67,"column":102}},"67":{"start":{"line":68,"column":8},"end":{"line":68,"column":108}},"68":{"start":{"line":69,"column":8},"end":{"line":69,"column":110}},"69":{"start":{"line":70,"column":8},"end":{"line":70,"column":126}},"70":{"start":{"line":71,"column":8},"end":{"line":71,"column":102}},"71":{"start":{"line":72,"column":8},"end":{"line":72,"column":136}},"72":{"start":{"line":73,"column":8},"end":{"line":73,"column":118}},"73":{"start":{"line":74,"column":8},"end":{"line":74,"column":118}},"74":{"start":{"line":75,"column":8},"end":{"line":75,"column":116}},"75":{"start":{"line":76,"column":8},"end":{"line":76,"column":132}},"76":{"start":{"line":77,"column":8},"end":{"line":77,"column":140}},"77":{"start":{"line":78,"column":8},"end":{"line":78,"column":140}},"78":{"start":{"line":79,"column":8},"end":{"line":79,"column":138}},"79":{"start":{"line":80,"column":8},"end":{"line":80,"column":116}},"80":{"start":{"line":81,"column":8},"end":{"line":81,"column":120}},"81":{"start":{"line":82,"column":8},"end":{"line":82,"column":98}},"82":{"start":{"line":83,"column":8},"end":{"line":83,"column":110}},"83":{"start":{"line":84,"column":8},"end":{"line":84,"column":100}},"84":{"start":{"line":86,"column":4},"end":{"line":112,"column":7}},"85":{"start":{"line":87,"column":24},"end":{"line":87,"column":66}},"86":{"start":{"line":88,"column":27},"end":{"line":88,"column":61}},"87":{"start":{"line":89,"column":8},"end":{"line":89,"column":63}},"88":{"start":{"line":90,"column":8},"end":{"line":90,"column":81}},"89":{"start":{"line":91,"column":8},"end":{"line":91,"column":78}},"90":{"start":{"line":92,"column":8},"end":{"line":92,"column":80}},"91":{"start":{"line":93,"column":8},"end":{"line":93,"column":110}},"92":{"start":{"line":94,"column":8},"end":{"line":94,"column":106}},"93":{"start":{"line":95,"column":8},"end":{"line":95,"column":100}},"94":{"start":{"line":96,"column":8},"end":{"line":96,"column":86}},"95":{"start":{"line":97,"column":8},"end":{"line":97,"column":106}},"96":{"start":{"line":98,"column":8},"end":{"line":98,"column":102}},"97":{"start":{"line":99,"column":8},"end":{"line":99,"column":84}},"98":{"start":{"line":100,"column":8},"end":{"line":100,"column":88}},"99":{"start":{"line":101,"column":8},"end":{"line":101,"column":94}},"100":{"start":{"line":102,"column":8},"end":{"line":102,"column":102}},"101":{"start":{"line":103,"column":8},"end":{"line":103,"column":92}},"102":{"start":{"line":104,"column":8},"end":{"line":104,"column":108}},"103":{"start":{"line":105,"column":8},"end":{"line":105,"column":124}},"104":{"start":{"line":106,"column":8},"end":{"line":106,"column":130}},"105":{"start":{"line":107,"column":8},"end":{"line":107,"column":120}},"106":{"start":{"line":108,"column":8},"end":{"line":108,"column":116}},"107":{"start":{"line":109,"column":8},"end":{"line":109,"column":96}},"108":{"start":{"line":110,"column":8},"end":{"line":110,"column":110}},"109":{"start":{"line":111,"column":8},"end":{"line":111,"column":100}},"110":{"start":{"line":113,"column":4},"end":{"line":141,"column":7}},"111":{"start":{"line":114,"column":30},"end":{"line":114,"column":72}},"112":{"start":{"line":115,"column":33},"end":{"line":115,"column":73}},"113":{"start":{"line":116,"column":8},"end":{"line":116,"column":75}},"114":{"start":{"line":117,"column":8},"end":{"line":117,"column":93}},"115":{"start":{"line":118,"column":8},"end":{"line":118,"column":86}},"116":{"start":{"line":119,"column":8},"end":{"line":119,"column":104}},"117":{"start":{"line":120,"column":8},"end":{"line":120,"column":102}},"118":{"start":{"line":121,"column":8},"end":{"line":121,"column":110}},"119":{"start":{"line":122,"column":8},"end":{"line":122,"column":90}},"120":{"start":{"line":123,"column":8},"end":{"line":123,"column":90}},"121":{"start":{"line":124,"column":8},"end":{"line":124,"column":92}},"122":{"start":{"line":125,"column":8},"end":{"line":125,"column":88}},"123":{"start":{"line":126,"column":8},"end":{"line":126,"column":116}},"124":{"start":{"line":127,"column":8},"end":{"line":127,"column":112}},"125":{"start":{"line":128,"column":8},"end":{"line":128,"column":96}},"126":{"start":{"line":129,"column":8},"end":{"line":129,"column":116}},"127":{"start":{"line":130,"column":8},"end":{"line":130,"column":114}},"128":{"start":{"line":131,"column":8},"end":{"line":131,"column":134}},"129":{"start":{"line":132,"column":8},"end":{"line":132,"column":114}},"130":{"start":{"line":133,"column":8},"end":{"line":133,"column":96}},"131":{"start":{"line":134,"column":8},"end":{"line":134,"column":120}},"132":{"start":{"line":135,"column":8},"end":{"line":135,"column":116}},"133":{"start":{"line":136,"column":8},"end":{"line":136,"column":138}},"134":{"start":{"line":137,"column":8},"end":{"line":137,"column":106}},"135":{"start":{"line":138,"column":8},"end":{"line":138,"column":102}},"136":{"start":{"line":139,"column":8},"end":{"line":139,"column":84}},"137":{"start":{"line":140,"column":8},"end":{"line":140,"column":106}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":30,"column":21},"end":{"line":30,"column":22}},"loc":{"start":{"line":30,"column":27},"end":{"line":142,"column":1}},"line":30},"7":{"name":"(anonymous_7)","decl":{"start":{"line":31,"column":39},"end":{"line":31,"column":40}},"loc":{"start":{"line":31,"column":45},"end":{"line":85,"column":5}},"line":31},"8":{"name":"(anonymous_8)","decl":{"start":{"line":86,"column":42},"end":{"line":86,"column":43}},"loc":{"start":{"line":86,"column":48},"end":{"line":112,"column":5}},"line":86},"9":{"name":"(anonymous_9)","decl":{"start":{"line":113,"column":41},"end":{"line":113,"column":42}},"loc":{"start":{"line":113,"column":47},"end":{"line":141,"column":5}},"line":113}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21}},"s":{"0":1,"1":11,"2":11,"3":11,"4":11,"5":11,"6":99,"7":11,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":11,"21":11,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1},"f":{"0":11,"1":99,"2":0,"3":1,"4":0,"5":1,"6":1,"7":1,"8":1,"9":1},"b":{"0":[1,1,1],"1":[1,0],"2":[11,0],"3":[11,0],"4":[11,11],"5":[0,11],"6":[11,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[11,0],"15":[11,11]},"inputSourceMap":{"version":3,"file":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/tests/Trimming.tests.ts","sources":["/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/tests/Trimming.tests.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  createTestFlightLegData,\n  createTestFlightRequestData,\n  createTestPassengerData,\n} from '../data/test-data';\nimport { trimRequest, trimFlightLeg, trimPassenger } from '../util/trim';\nimport chai, { expect } from 'chai';\nimport type { FlightLegData } from '../interfaces/legs/flight-leg.interface';\nimport type { FlightRequestData } from '../interfaces/requests/flight-request.interface';\nimport type { PassengerData } from '../interfaces/passenger/passenger.interface';\nimport type { TrimmedFlightLeg } from '../interfaces/legs/trimmed-flight-leg.interface';\nimport type { TrimmedFlightRequest } from '../interfaces/requests/trimmed-flight-request.interface';\nimport type { TrimmedPassenger } from '../interfaces/passenger/trimmed-passenger.interface';\nchai.should();\n\ndescribe('Trimming', () => {\n  it('should properly trim request', () => {\n    const requestData: FlightRequestData = createTestFlightRequestData();\n    const trimmedRequest: TrimmedFlightRequest = trimRequest(requestData);\n    expect(requestData.id).to.equal(trimmedRequest.id);\n    expect(requestData.createdTime).to.equal(trimmedRequest.createdTime);\n    expect(requestData.fields['Submission ID']).to.equal(\n      trimmedRequest['Submission ID']\n    );\n    expect(requestData.fields['Trip Type']).to.equal(trimmedRequest['Trip Type']);\n    expect(requestData.fields['Departure Date']).to.equal(\n      trimmedRequest['Departure Date']\n    );\n    expect(requestData.fields['Request Type']).to.equal(\n      trimmedRequest['Request Type']\n    );\n    expect(requestData.fields['Household Size']).to.equal(\n      trimmedRequest['Household Size']\n    );\n    expect(requestData.fields['Passenger 2 Approval Status']).to.equal(\n      trimmedRequest['Passenger 2 Approval Status']\n    );\n    expect(requestData.fields['Diagnosis']).to.equal(trimmedRequest['Diagnosis']);\n    expect(requestData.fields['Passenger 3']).to.equal(\n      trimmedRequest['Passenger 3']\n    );\n    expect(requestData.fields['Patient Type']).to.equal(\n      trimmedRequest['Patient Type']\n    );\n    expect(requestData.fields.Ethnicity).to.equal(trimmedRequest.Ethnicity);\n    expect(requestData.fields['Treatment City']).to.equal(\n      trimmedRequest['Treatment City']\n    );\n    expect(requestData.fields.Education).to.equal(trimmedRequest.Education);\n    expect(requestData.fields['Treatment Phone']).to.equal(\n      trimmedRequest['Treatment Phone']\n    );\n    expect(requestData.fields['Submission Date']).to.equal(\n      trimmedRequest['Submission Date']\n    );\n    expect(requestData.fields['Alt Destination Airport']).to.equal(\n      trimmedRequest['Alt Destination Airport']\n    );\n    expect(requestData.fields['Primary Treatment Doctor']).to.equal(\n      trimmedRequest['Primary Treatment Doctor']\n    );\n    expect(requestData.fields['Wheelchair?']).to.equal(\n      trimmedRequest['Wheelchair?']\n    );\n    expect(requestData.fields['Flight Specialist']).to.equal(\n      trimmedRequest['Flight Specialist']\n    );\n    expect(requestData.fields['Appt Date']).to.equal(trimmedRequest['Appt Date']);\n    expect(requestData.fields['Passenger 3 Approval Status']).to.equal(\n      trimmedRequest['Passenger 3 Approval Status']\n    );\n    expect(requestData.fields['First Request']).to.equal(\n      trimmedRequest['First Request']\n    );\n    expect(requestData.fields['Type of Treatment']).to.equal(\n      trimmedRequest['Type of Treatment']\n    );\n    expect(requestData.fields['Passenger 3 Reason']).to.equal(\n      trimmedRequest['Passenger 3 Reason']\n    );\n    expect(requestData.fields['Flight Legs']).to.equal(\n      trimmedRequest['Flight Legs']\n    );\n    expect(requestData.fields.Status).to.equal(trimmedRequest.Status);\n    expect(requestData.fields['Oxygen?']).to.equal(trimmedRequest['Oxygen?']);\n    expect(requestData.fields['Origin Airport']).to.equal(\n      trimmedRequest['Origin Airport']\n    );\n    expect(requestData.fields['Treatment Fax']).to.equal(\n      trimmedRequest['Treatment Fax']\n    );\n    expect(requestData.fields['Passenger 3 Different Return']).to.equal(\n      trimmedRequest['Passenger 3 Different Return']\n    );\n    expect(requestData.fields.Patient).to.equal(trimmedRequest.Patient);\n    expect(requestData.fields['Passenger 2']).to.equal(\n      trimmedRequest['Passenger 2']\n    );\n    expect(requestData.fields['Return Date']).to.equal(\n      trimmedRequest['Return Date']\n    );\n    expect(requestData.fields['Treatment Site']).to.equal(\n      trimmedRequest['Treatment Site']\n    );\n    expect(requestData.fields['Treatment State']).to.equal(\n      trimmedRequest['Treatment State']\n    );\n    expect(requestData.fields['Passenger 3 Return Date']).to.equal(\n      trimmedRequest['Passenger 3 Return Date']\n    );\n    expect(requestData.fields['Patient Age']).to.equal(\n      trimmedRequest['Patient Age']\n    );\n    expect(requestData.fields['Passenger 2 Different Return']).to.equal(\n      trimmedRequest['Passenger 2 Different Return']\n    );\n    expect(requestData.fields['Destination Airport']).to.equal(\n      trimmedRequest['Destination Airport']\n    );\n    expect(requestData.fields['Alt. Origin Airport']).to.equal(\n      trimmedRequest['Alt. Origin Airport']\n    );\n    expect(requestData.fields['AirTable Record ID']).to.equal(\n      trimmedRequest['AirTable Record ID']\n    );\n    expect(requestData.fields['Patient AirTable Record ID']).to.equal(\n      trimmedRequest['Patient AirTable Record ID']\n    );\n    expect(requestData.fields['Passenger 2 AirTable Record ID']).to.equal(\n      trimmedRequest['Passenger 2 AirTable Record ID']\n    );\n    expect(requestData.fields['Passenger 3 AirTable Record ID']).to.equal(\n      trimmedRequest['Passenger 3 AirTable Record ID']\n    );\n    expect(requestData.fields['Passenger AirTable Record IDs']).to.equal(\n      trimmedRequest['Passenger AirTable Record IDs']\n    );\n    expect(requestData.fields['Existing Diagnoses']).to.equal(\n      trimmedRequest['Existing Diagnoses']\n    );\n    expect(requestData.fields['Total Nautical Miles']).to.equal(\n      trimmedRequest['Total Nautical Miles']\n    );\n    expect(requestData.fields['# of Legs']).to.equal(trimmedRequest['# of Legs']);\n    expect(requestData.fields['Total # of Legs']).to.equal(\n      trimmedRequest['Total # of Legs']\n    );\n    expect(requestData.fields['Request ID']).to.equal(\n      trimmedRequest['Request ID']\n    );\n  });\n\n  it('should properly trim flight leg', () => {\n    const legData: FlightLegData = createTestFlightLegData();\n    const trimmedLeg: TrimmedFlightLeg = trimFlightLeg(legData);\n    expect(legData.id).to.equal(trimmedLeg.id);\n    expect(legData.createdTime).to.equal(trimmedLeg.createdTime);\n    expect(legData.fields.Status).to.equal(trimmedLeg.Status);\n    expect(legData.fields.Airline).to.equal(trimmedLeg.Airline);\n    expect(legData.fields['Departure Date/Time']).to.equal(\n      trimmedLeg['Departure Date/Time']\n    );\n    expect(legData.fields['Arrival Date/Time']).to.equal(\n      trimmedLeg['Arrival Date/Time']\n    );\n    expect(legData.fields['Nautical Miles']).to.equal(\n      trimmedLeg['Nautical Miles']\n    );\n    expect(legData.fields.Passengers).to.equal(trimmedLeg.Passengers);\n    expect(legData.fields['Departure Airport']).to.equal(\n      trimmedLeg['Departure Airport']\n    );\n    expect(legData.fields['Arrival Airport']).to.equal(\n      trimmedLeg['Arrival Airport']\n    );\n    expect(legData.fields['Leg ID']).to.equal(trimmedLeg['Leg ID']);\n    expect(legData.fields['Leg Type']).to.equal(trimmedLeg['Leg Type']);\n    expect(legData.fields['Total Miles']).to.equal(trimmedLeg['Total Miles']);\n    expect(legData.fields['Passenger Names']).to.equal(\n      trimmedLeg['Passenger Names']\n    );\n    expect(legData.fields['Total Cost']).to.equal(trimmedLeg['Total Cost']);\n    expect(legData.fields['AirTable Record ID']).to.equal(\n      trimmedLeg['AirTable Record ID']\n    );\n    expect(legData.fields['Request AirTable Record ID']).to.equal(\n      trimmedLeg['Request AirTable Record ID']\n    );\n    expect(legData.fields['Passenger AirTable Record IDs']).to.equal(\n      trimmedLeg['Passenger AirTable Record IDs']\n    );\n    expect(legData.fields['Log Airline Credit'].label).to.equal(\n      trimmedLeg['Log Airline Credit'].label\n    );\n    expect(legData.fields['Log Airline Credit'].url).to.equal(\n      trimmedLeg['Log Airline Credit'].url\n    );\n    expect(legData.fields['Patient Name']).to.equal(trimmedLeg['Patient Name']);\n    expect(legData.fields['Patient Latest Trip']).to.equal(\n      trimmedLeg['Patient Latest Trip']\n    );\n    expect(legData.fields['Is Latest Trip']).to.equal(\n      trimmedLeg['Is Latest Trip']\n    );\n  });\n\n  it('should properly trim passenger', () => {\n    const passengerData: PassengerData = createTestPassengerData();\n    const trimmedPassenger: TrimmedPassenger = trimPassenger(passengerData);\n    expect(passengerData.id).to.equal(trimmedPassenger.id);\n    expect(passengerData.createdTime).to.equal(trimmedPassenger.createdTime);\n    expect(passengerData.fields.Type).to.equal(trimmedPassenger.Type);\n    expect(passengerData.fields['First Name']).to.equal(\n      trimmedPassenger['First Name']\n    );\n    expect(passengerData.fields['Last Name']).to.equal(\n      trimmedPassenger['Last Name']\n    );\n    expect(passengerData.fields['Date of Birth']).to.equal(\n      trimmedPassenger['Date of Birth']\n    );\n    expect(passengerData.fields.Gender).to.equal(trimmedPassenger.Gender);\n    expect(passengerData.fields.Street).to.equal(trimmedPassenger.Street);\n    expect(passengerData.fields.Country).to.equal(trimmedPassenger.Country);\n    expect(passengerData.fields.Email).to.equal(trimmedPassenger.Email);\n    expect(passengerData.fields['Household Income']).to.equal(\n      trimmedPassenger['Household Income']\n    );\n    expect(passengerData.fields['Household Size']).to.equal(\n      trimmedPassenger['Household Size']\n    );\n    expect(passengerData.fields.Ethnicity).to.equal(trimmedPassenger.Ethnicity);\n    expect(passengerData.fields['Military Service']).to.equal(\n      trimmedPassenger['Military Service']\n    );\n    expect(passengerData.fields['Military Member']).to.equal(\n      trimmedPassenger['Military Member']\n    );\n    expect(passengerData.fields['How did you hear about us']).to.equal(\n      trimmedPassenger['How did you hear about us']\n    );\n    expect(passengerData.fields['All Flight Legs']).to.equal(\n      trimmedPassenger['All Flight Legs']\n    );\n    expect(passengerData.fields.Diagnosis).to.equal(trimmedPassenger.Diagnosis);\n    expect(passengerData.fields['AirTable Record ID']).to.equal(\n      trimmedPassenger['AirTable Record ID']\n    );\n    expect(passengerData.fields['# of Flight Legs']).to.equal(\n      trimmedPassenger['# of Flight Legs']\n    );\n    expect(passengerData.fields['# of Booked Flight Requests']).to.equal(\n      trimmedPassenger['# of Booked Flight Requests']\n    );\n    expect(passengerData.fields['Birth Month']).to.equal(\n      trimmedPassenger['Birth Month']\n    );\n    expect(passengerData.fields['Full Name']).to.equal(\n      trimmedPassenger['Full Name']\n    );\n    expect(passengerData.fields.Age).to.equal(trimmedPassenger.Age);\n    expect(passengerData.fields['Latest Trip']).to.equal(\n      trimmedPassenger['Latest Trip']\n    );\n  });\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c775a9c12aed1359f7ee260e8075aba754f6449f","contentHash":"16b14269cd315ba8e55179a880ad98d1fd52487f6d5f12e5417e1fa3697b3471"},"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/tests/User.tests.ts":{"path":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/tests/User.tests.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"25":{"start":{"line":26,"column":4},"end":{"line":26,"column":62}},"26":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}},"27":{"start":{"line":29,"column":24},"end":{"line":29,"column":58}},"28":{"start":{"line":30,"column":20},"end":{"line":30,"column":57}},"29":{"start":{"line":31,"column":17},"end":{"line":31,"column":51}},"30":{"start":{"line":32,"column":15},"end":{"line":32,"column":44}},"31":{"start":{"line":33,"column":0},"end":{"line":33,"column":26}},"32":{"start":{"line":35,"column":0},"end":{"line":35,"column":40}},"33":{"start":{"line":36,"column":0},"end":{"line":36,"column":24}},"34":{"start":{"line":38,"column":12},"end":{"line":38,"column":50}},"35":{"start":{"line":41,"column":0},"end":{"line":45,"column":3}},"36":{"start":{"line":42,"column":4},"end":{"line":44,"column":7}},"37":{"start":{"line":43,"column":8},"end":{"line":43,"column":15}},"38":{"start":{"line":47,"column":0},"end":{"line":50,"column":3}},"39":{"start":{"line":48,"column":4},"end":{"line":48,"column":19}},"40":{"start":{"line":49,"column":4},"end":{"line":49,"column":11}},"41":{"start":{"line":52,"column":0},"end":{"line":81,"column":3}},"42":{"start":{"line":53,"column":4},"end":{"line":66,"column":7}},"43":{"start":{"line":54,"column":8},"end":{"line":65,"column":11}},"44":{"start":{"line":63,"column":12},"end":{"line":63,"column":56}},"45":{"start":{"line":64,"column":12},"end":{"line":64,"column":19}},"46":{"start":{"line":67,"column":4},"end":{"line":80,"column":7}},"47":{"start":{"line":68,"column":8},"end":{"line":79,"column":11}},"48":{"start":{"line":77,"column":12},"end":{"line":77,"column":56}},"49":{"start":{"line":78,"column":12},"end":{"line":78,"column":19}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":56},"end":{"line":25,"column":57}},"loc":{"start":{"line":25,"column":71},"end":{"line":27,"column":1}},"line":25},"7":{"name":"(anonymous_7)","decl":{"start":{"line":41,"column":7},"end":{"line":41,"column":8}},"loc":{"start":{"line":41,"column":15},"end":{"line":45,"column":1}},"line":41},"8":{"name":"(anonymous_8)","decl":{"start":{"line":42,"column":30},"end":{"line":42,"column":31}},"loc":{"start":{"line":42,"column":36},"end":{"line":44,"column":5}},"line":42},"9":{"name":"(anonymous_9)","decl":{"start":{"line":47,"column":6},"end":{"line":47,"column":7}},"loc":{"start":{"line":47,"column":14},"end":{"line":50,"column":1}},"line":47},"10":{"name":"(anonymous_10)","decl":{"start":{"line":52,"column":43},"end":{"line":52,"column":44}},"loc":{"start":{"line":52,"column":49},"end":{"line":81,"column":1}},"line":52},"11":{"name":"(anonymous_11)","decl":{"start":{"line":53,"column":56},"end":{"line":53,"column":57}},"loc":{"start":{"line":53,"column":64},"end":{"line":66,"column":5}},"line":53},"12":{"name":"(anonymous_12)","decl":{"start":{"line":62,"column":17},"end":{"line":62,"column":18}},"loc":{"start":{"line":62,"column":31},"end":{"line":65,"column":9}},"line":62},"13":{"name":"(anonymous_13)","decl":{"start":{"line":67,"column":65},"end":{"line":67,"column":66}},"loc":{"start":{"line":67,"column":73},"end":{"line":80,"column":5}},"line":67},"14":{"name":"(anonymous_14)","decl":{"start":{"line":76,"column":17},"end":{"line":76,"column":18}},"loc":{"start":{"line":76,"column":31},"end":{"line":79,"column":9}},"line":76}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":27}},{"start":{"line":25,"column":31},"end":{"line":25,"column":51}},{"start":{"line":25,"column":56},"end":{"line":27,"column":1}}],"line":25},"17":{"loc":{"start":{"line":26,"column":11},"end":{"line":26,"column":61}},"type":"cond-expr","locations":[{"start":{"line":26,"column":37},"end":{"line":26,"column":40}},{"start":{"line":26,"column":43},"end":{"line":26,"column":61}}],"line":26},"18":{"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":33}},"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":15}},{"start":{"line":26,"column":19},"end":{"line":26,"column":33}}],"line":26}},"s":{"0":1,"1":11,"2":11,"3":11,"4":11,"5":11,"6":2,"7":11,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":11,"21":11,"22":1,"23":1,"24":1,"25":2,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1},"f":{"0":11,"1":2,"2":0,"3":1,"4":0,"5":1,"6":2,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1},"b":{"0":[1,1,1],"1":[1,0],"2":[11,0],"3":[11,0],"4":[11,11],"5":[0,11],"6":[11,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[11,0],"15":[11,11],"16":[1,1,1],"17":[0,2],"18":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/tests/User.tests.ts","sources":["/Users/sophiascomputer/Documents/vanderbilt/changeplusplus/MFbackend/miracleflightsbackend/src/tests/User.tests.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,2DAA0D;AAC1D,0DAAiC;AACjC,oDAA4B;AAC5B,6CAAoC;AAEpC,gBAAM,CAAC,MAAM,EAAE,CAAC;AAEhB,cAAc;AACd,cAAI,CAAC,GAAG,CAAC,mBAAQ,CAAC,CAAC;AACnB,cAAI,CAAC,MAAM,EAAE,CAAC;AAEd,qBAAqB;AACrB,MAAM,GAAG,GAAG,IAAA,+BAAe,GAAE,CAAC;AAC9B,IAAI,MAAc,CAAC;AAEnB,oBAAoB;AACpB,MAAM,CAAC,IAAI,CAAC,EAAE;IACZ,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;QAC7B,IAAI,EAAE,CAAC;IACT,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,oBAAoB;AACpB,KAAK,CAAC,IAAI,CAAC,EAAE;IACX,MAAM,CAAC,KAAK,EAAE,CAAC;IACf,IAAI,EAAE,CAAC;AACT,CAAC,CAAC,CAAC;AAEH,YAAY;AACZ,QAAQ,CAAC,gCAAgC,EAAE,GAAG,EAAE;IAC9C,EAAE,CAAC,+CAA+C,EAAE,IAAI,CAAC,EAAE;QACzD,cAAI;aACD,OAAO,CAAC,GAAG,CAAC;aACZ,IAAI,CAAC,QAAQ,CAAC;aACd,IAAI,CAAC;YACJ,SAAS,EAAE,MAAM;YACjB,QAAQ,EAAE,MAAM;YAChB,SAAS,EAAE,0BAA0B;SACtC,CAAC;aACD,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;YAChB,IAAA,aAAM,EAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAChC,IAAI,EAAE,CAAC;QACT,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wDAAwD,EAAE,IAAI,CAAC,EAAE;QAClE,cAAI;aACD,OAAO,CAAC,GAAG,CAAC;aACZ,IAAI,CAAC,QAAQ,CAAC;aACd,IAAI,CAAC;YACJ,SAAS,EAAE,MAAM;YACjB,QAAQ,EAAE,QAAQ;YAClB,SAAS,EAAE,0BAA0B;SACtC,CAAC;aACD,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;YAChB,IAAA,aAAM,EAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAChC,IAAI,EAAE,CAAC;QACT,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { configureServer } from '../config/server.config';\nimport chaiHttp from 'chai-http';\nimport dotenv from 'dotenv';\nimport chai, { expect } from 'chai';\nimport type { Server } from 'http';\ndotenv.config();\n\n// set up chai\nchai.use(chaiHttp);\nchai.should();\n\n// set up mock server\nconst app = configureServer();\nlet server: Server;\n\n// start mock server\nbefore(done => {\n  server = app.listen(1235, () => {\n    done();\n  });\n});\n\n// close mock server\nafter(done => {\n  server.close();\n  done();\n});\n\n// Test case\ndescribe('POST test/bodyParameterExample', () => {\n  it('should return a 200 response if a user exists', done => {\n    chai\n      .request(app)\n      .post('/user/')\n      .send({\n        firstName: 'Boba',\n        lastName: 'Fett',\n        birthdate: '2000-12-11T19:33:38+0000',\n      })\n      .end((err, res) => {\n        expect(res).to.have.status(200);\n        done();\n      });\n  });\n\n  it('should return a 400 response if a user does not exists', done => {\n    chai\n      .request(app)\n      .post('/user/')\n      .send({\n        firstName: 'Test',\n        lastName: 'Person',\n        birthdate: '2000-12-11T19:33:38+0000',\n      })\n      .end((err, res) => {\n        expect(res).to.have.status(400);\n        done();\n      });\n  });\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a2fbb5ffffdc384c1ae86bec02db4d732711fe04","contentHash":"b9fb4de390c4722cd3e2d1fb1a3d6e40432d8abf16b99edd22894db2db62db84"}}